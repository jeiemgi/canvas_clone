{
  "version": 3,
  "sources": ["css-bundle-update-plugin-ns:/Users/josemiguel/dev/canvas-studio/canvas-website/node_modules/@remix-run/css-bundle/dist/index.js", "<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/lib/prismicClient.ts", "../app/components/Layout/Layout.tsx", "../app/components/Layout/Lenis.tsx", "../app/components/Layout/Navigation.tsx", "../app/hooks/useIsScrolled.ts", "../app/components/Navigation/NavThemeProvider.tsx", "../app/components/Navigation/Nav.tsx", "../app/components/CTA/PrimaryCTA.tsx", "../app/components/CTA/SecondaryCTA.tsx", "../app/hooks/useIsomorphicLayoutEffect.ts", "../app/components/CTA/TextCloneButton.tsx", "../app/components/CTA/useTextAnimation.ts", "../app/components/CTA/LinkCTA.tsx", "../app/components/Navigation/NavLogo.tsx", "../app/svg/CanvasLogo.tsx", "../app/svg/ClearIcon.tsx", "../app/lib/constants.ts", "../app/components/Layout/LayoutContact.tsx", "../app/slices/Contact/ContactPage.tsx", "../app/routes/contact.tsx", "../app/slices/Contact/ContactForm.tsx", "../app/components/Input/Input.tsx", "../app/components/Input/InputHelpers.tsx", "../app/components/Transition.tsx", "../app/components/Input/TextArea.tsx", "../app/components/Layout/LayoutWorkMenu.tsx", "../app/lib/easings.ts", "../app/components/ProjectHero/ProjectHero.tsx", "../app/components/Image/Image.tsx", "../app/components/CTA/TextCTA.tsx", "../app/components/Video/Video.tsx", "../app/components/ProjectHero/ProjectHeroTable.tsx", "../app/components/ProjectHero/index.ts", "../app/components/Layout/index.tsx", "../app/routes/work.$project.tsx", "../app/lib/projectDetails.ts", "../app/slices/WorkProject/WorkProjectSliceZone.tsx", "../app/slices/WorkProject/WorkProjectFullWidth.tsx", "../app/slices/WorkProject/WorkProject2Column.tsx", "../app/slices/WorkProject/WorkProjectVideoColor.tsx", "../app/slices/WorkProject/WorkProjectVideoPhoto.tsx", "../app/slices/WorkProject/WorkProjectPictureColor.tsx", "../app/slices/WorkProject/WorkProjectNextProject.tsx", "../app/slices/WorkProject/WorkProjectDetails.tsx", "../app/slices/WorkProject/WorkProjectDetailsModal.tsx", "../app/slices/WorkProject/WorkProjectDetailsModalTableInfo.tsx", "../app/slices/WorkProject/WorkProjectDetailsModalTableFull.tsx", "../app/routes/styleguide.tsx", "../app/routes/_index.tsx", "../app/lib/prismicUtils.ts", "../app/slices/HomePage/HomePageHero.tsx", "../app/slices/HomePage/HomePagePortfolioDesktop.tsx", "../app/slices/HomePage/HomePagePortfolioMobile.tsx", "../app/slices/HomePage/HomePageProjectScrollContainer.tsx", "../app/slices/HomePage/HomePageProjectTitleContainer.tsx", "../app/slices/HomePage/HomePageProjectBackground.tsx", "../app/slices/HomePage/HomePageProjectsMobile.tsx", "../app/slices/HomePage/HomePageProjects.tsx", "../app/slices/HomePage/HomePageTable.tsx", "../app/slices/HomePage/HomePageTableColumn.tsx", "../app/slices/HomePage/HomePageReviews.tsx", "../app/components/TextBlur.tsx", "../app/slices/HomePage/HomePageQuote.tsx", "../app/components/Footer.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * @remix-run/css-bundle v2.0.0-pre.5\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// This file's contents are replaced by `cssBundlePlugin`. This file only exists\n// to provide type definitions and a graceful fallback when importing this\n// package outside of the Remix compiler.\nconst cssBundleHref = undefined;\n\nexports.cssBundleHref = cssBundleHref;\n", "export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {\n  Links,\n  Meta,\n  Outlet,\n  Scripts,\n  LiveReload,\n  ScrollRestoration,\n  useLoaderData } from\n\"@remix-run/react\";\nimport { defer } from \"@remix-run/node\";\nimport { createClient } from \"~/lib/prismicClient\";\nimport global from \"~/styles/global.css\";\nimport tailwind from \"~/styles/tailwind.css\";\nimport components from \"~/styles/components/index.css\";\nimport splideCss from \"@splidejs/splide/dist/css/splide-core.min.css\";\nimport { cssBundleHref } from \"@remix-run/css-bundle\";\nimport Layout from \"~/components/Layout\";\nimport { gsap } from \"gsap\";\nimport Flip from \"gsap/dist/Flip\";\nimport SplitText from \"gsap/dist/SplitText\";\nimport ScrollSmoother from \"gsap/dist/ScrollSmoother\";\nimport ScrollTrigger from \"gsap/dist/ScrollTrigger\";\n\nimport type { LinksFunction, V2_MetaFunction } from \"@remix-run/node\";\nimport type { PropsWithChildren } from \"react\";\n\n// NOTE: Register plugins here, so we register them only once.\ngsap.registerPlugin(Flip, ScrollTrigger, ScrollSmoother, SplitText);\n\nexport const links: LinksFunction = () => {\n  return [\n  ...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : []),\n  { rel: \"stylesheet\", href: global },\n  { rel: \"stylesheet\", href: tailwind },\n  { rel: \"stylesheet\", href: splideCss },\n  { rel: \"stylesheet\", href: components }];\n\n};\n\nexport const loader = async () => {\n  const client = createClient();\n  const workMenu = await client.getSingle(\"workmenu\", {\n    fetchLinks: [\"project_page.roles\", \"project_page.links\"]\n  });\n\n  return defer({\n    workMenu\n  });\n};\n\nexport const meta: V2_MetaFunction = () => [\n{\n  charset: \"utf-8\",\n  title: \"Canvas | Design Studio and Creative Agency\",\n  viewport: \"width=device-width,initial-scale=1\"\n}];\n\n\nfunction Document({ children, title }: PropsWithChildren<{title?: string;}>) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}\n\n/*export function ErrorBoundary() {\n  const error = useRouteError();\n  console.error(error);\n\n  if (isRouteErrorResponse(error)) {\n    return (\n      <Document title={`${error.status} ${error.statusText}`}>\n        <Layout>\n          <ErrorBoundaryComponent error={error} />\n        </Layout>\n      </Document>\n    );\n  }\n\n  const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n  return (\n    <Document title=\"App Error\">\n      <div className=\"error-container\">\n        <h1>App Error</h1>\n        <pre>{errorMessage}</pre>\n      </div>\n    </Document>\n  );\n}*/\n\nexport type RootLoader = typeof loader;\n\nexport default function App() {\n  const { workMenu } = useLoaderData<RootLoader>();\n\n  return (\n    <Document>\n      <Layout workMenuData={workMenu}>\n        <Outlet />\n      </Layout>\n    </Document>);\n\n}", "import * as prismic from \"@prismicio/client\";\n\n// Fill in your repository name\nexport const repositoryName = \"canvas-website-v4\";\n\n// export const client = prismic.createClient(repositoryName, {\n// If your repository is private, add an access token\n// accessToken: process.env.PRISMIC_ACCESS_TOKEN,\n// fetch,\n\n// This defines how you will structure URL paths in your project.\n// Update the types to match the custom types in your project, and edit\n// the paths to match the routing in your project.\n//\n// If you are not using a router in your project, you can change this\n// to an empty array or remove the option entirely.\n// routes: [\n//   {\n//     type: \"homepage\",\n//     path: \"/\",\n//   },\n// ],\n// });\n\nexport function createClient() {\n  return prismic.createClient(repositoryName, {\n    // If your repository is private, add an access token\n    accessToken: process.env.PRISMIC_ACCESS_TOKEN,\n\n    // This defines how you will structure URL paths in your project.\n    // Update the types to match the custom types in your project, and edit\n    // the paths to match the routing in your project.\n    //\n    // If you are not using a router in your project, you can change this\n    // to an empty array or remove the option entirely.\n    // routes: [\n    //   {\n    //     type: \"homepage\",\n    //     path: \"/\",\n    //   },\n    // ],\n  });\n}\n", "import { useState } from \"react\";\nimport Lenis from \"~/components/Layout/Lenis\";\nimport Navigation from \"~/components/Layout/Navigation\";\nimport NavThemeProvider from \"~/components/Navigation/NavThemeProvider\";\nimport LayoutContact from \"~/components/Layout/LayoutContact\";\nimport LayoutWorkMenu from \"~/components/Layout/LayoutWorkMenu\";\nimport type { WorkmenuDocument } from \"types.generated\";\nimport type { ReactNode } from \"react\";\n\nexport type LayoutModalName = \"contact\" | \"work\" | null;\n\nfunction Layout({\n  children,\n  workMenuData,\n}: {\n  children: ReactNode;\n  workMenuData?: WorkmenuDocument;\n}) {\n  const [modalOpen, setModalOpen] = useState<LayoutModalName>(null);\n\n  return (\n    <NavThemeProvider>\n      <Navigation\n        modalOpen={modalOpen}\n        setModalOpen={(modal) => setModalOpen(modal)}\n      />\n      <LayoutContact\n        show={modalOpen === \"contact\"}\n        onClose={() => setModalOpen(null)}\n      />\n      {workMenuData ? (\n        <LayoutWorkMenu\n          data={workMenuData}\n          show={modalOpen === \"work\"}\n          onClose={() => setModalOpen(null)}\n        />\n      ) : null}\n      <Lenis>{children}</Lenis>\n    </NavThemeProvider>\n  );\n}\n\nexport default Layout;\n", "import { gsap } from \"gsap\";\nimport { useEffect, useRef } from \"react\";\nimport { ReactLenis } from \"@studio-freight/react-lenis\";\nimport type { ReactNode } from \"react\";\nimport type Lenis from \"@studio-freight/lenis\";\n\nfunction LenisComponent({ children }: { children: ReactNode }) {\n  const lenisRef = useRef<Lenis>();\n  useEffect(() => {\n    function update(time: number) {\n      lenisRef.current?.raf(time * 1000);\n    }\n\n    gsap.ticker.add(update);\n    return () => {\n      gsap.ticker.remove(update);\n    };\n  }, []);\n\n  return (\n    <ReactLenis root ref={lenisRef} autoRaf={false}>\n      {children}\n    </ReactLenis>\n  );\n}\n\nexport default LenisComponent;\n", "import { useNavigate } from \"react-router\";\nimport { useWindowSize } from \"usehooks-ts\";\nimport useIsScrolled from \"~/hooks/useIsScrolled\";\nimport { useEffect } from \"react\";\nimport { useNavTheme } from \"~/components/Navigation/NavThemeProvider\";\nimport Nav from \"~/components/Navigation/Nav\";\nimport NavList from \"~/components/Navigation/NavList\";\nimport NavListItem from \"~/components/Navigation/NavListItem\";\nimport { PrimaryCTAButton } from \"~/components/CTA\";\nimport { NavLogoDesktop, NavLogoMobile } from \"~/components/Navigation/NavLogo\";\nimport { MOBILE_BREAKPOINT } from \"~/lib/constants\";\nimport type { LayoutModalName } from \"~/components/Layout/Layout\";\n\nfunction Navigation({\n  modalOpen,\n  setModalOpen,\n}: {\n  modalOpen: LayoutModalName;\n  setModalOpen: (modal: LayoutModalName) => void;\n}) {\n  const navigate = useNavigate();\n\n  const isScrolled = useIsScrolled();\n  const { width: windowWidth } = useWindowSize();\n  const { theme, setTheme } = useNavTheme();\n\n  useEffect(() => {\n    const isMobile = windowWidth < MOBILE_BREAKPOINT && windowWidth > 0;\n    if (isMobile && isScrolled) {\n      setTheme(\"white\");\n    }\n  }, [windowWidth, isScrolled, setTheme]);\n\n  const onLogoClick = () => {\n    if (modalOpen) {\n      setModalOpen(null);\n    } else {\n      navigate(\"/\");\n    }\n  };\n\n  return (\n    <Nav>\n      <ul>\n        <li>\n          <PrimaryCTAButton\n            active={modalOpen === \"work\"}\n            dark={theme === \"transparent\"}\n            onClick={() => setModalOpen(\"work\")}\n          >\n            WORK\n          </PrimaryCTAButton>\n        </li>\n      </ul>\n\n      <NavLogoMobile onClick={onLogoClick} />\n      <NavLogoDesktop onClick={onLogoClick} />\n\n      <ul>\n        <li>\n          <PrimaryCTAButton\n            dark={theme === \"transparent\"}\n            active={modalOpen === \"contact\"}\n            onClick={() => setModalOpen(\"contact\")}\n          >\n            Contact\n          </PrimaryCTAButton>\n        </li>\n      </ul>\n    </Nav>\n  );\n}\n\nexport default Navigation;\n", "import { useEffect, useState } from \"react\";\n\nfunction useIsScrolled(threshold = 0) {\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  useEffect(() => {\n    const update = () => {\n      setIsScrolled(window.scrollY > threshold);\n    };\n\n    window.addEventListener(\"scroll\", update);\n    update();\n    return () => window.removeEventListener(\"scroll\", update);\n  }, [threshold]);\n\n  return isScrolled;\n}\n\nexport const useIsScrolledInArea = (start: number, end: number) => {\n  const [isInView, setIsInView] = useState(false);\n\n  useEffect(() => {\n    const updatePosition = () => {\n      const endPos = window.innerHeight + end;\n      setIsInView(\n        scrollY > start &&\n          scrollY + endPos < document.documentElement.scrollHeight - endPos\n      );\n    };\n    window.addEventListener(\"scroll\", updatePosition);\n\n    updatePosition();\n    return () => window.removeEventListener(\"scroll\", updatePosition);\n  }, [start, end]);\n\n  return isInView;\n};\n\nexport default useIsScrolled;\n", "import useIsMobile from \"~/hooks/useIsMobile\";\nimport useIsScrolled from \"~/hooks/useIsScrolled\";\nimport { useNavigation } from \"@remix-run/react\";\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport type { ReactNode } from \"react\";\n\nexport type NavThemeType = \"transparent\" | \"white\";\n\nexport interface NavThemeProps {\n  theme: NavThemeType;\n  setTheme: (theme: NavThemeType) => void;\n}\n\nexport const NavThemeContext = createContext<NavThemeProps>({\n  theme: \"transparent\",\n  setTheme: () => {\n    console.log(\"setTheme defaultAction\");\n  },\n});\n\nexport function NavThemeProvider({ children }: { children: ReactNode }) {\n  const [theme, setTheme] = useState<NavThemeType>(\"transparent\");\n\n  const setThemeCallback = (newTheme: NavThemeType) => {\n    setTheme(newTheme);\n  };\n\n  return (\n    <NavThemeContext.Provider\n      value={{\n        theme,\n        setTheme: setThemeCallback,\n      }}\n    >\n      {children}\n    </NavThemeContext.Provider>\n  );\n}\n\nexport const useNavTheme = () => {\n  return useContext(NavThemeContext);\n};\n\nexport default NavThemeProvider;\n", "import clsx from \"clsx\";\nimport { useNavTheme } from \"~/components/Navigation/NavThemeProvider\";\nimport type { NavProps } from \"react-html-props\";\n\nfunction Nav({ children }: NavProps) {\n  const { theme } = useNavTheme();\n\n  return (\n    <nav\n      className={clsx(\n        \"fixed left-0 top-0 z-50 h-header w-full px-4 md:h-headerDesk md:px-8\",\n        \"flex flex-row items-center justify-between transition-colors duration-100\",\n        theme === \"white\" ? \"bg-white delay-500\" : \"bg-gradient delay-0\"\n      )}\n    >\n      {children}\n    </nav>\n  );\n}\n\nexport default Nav;\n", "import clsx from \"clsx\";\nimport { Link } from \"@remix-run/react\";\nimport type { LinkProps } from \"@remix-run/react\";\nimport type { ButtonProps } from \"react-html-props\";\n\ninterface Props {\n  size?: \"sm\" | \"lg\";\n  dark?: boolean;\n  active?: boolean;\n}\n\ntype PrimaryCTALink = Props & LinkProps;\n\nexport function PrimaryCTALink({\n  size = \"sm\",\n  dark = false,\n  active = false,\n  children,\n  className,\n  ...props\n}: PrimaryCTALink) {\n  const textStyle = size === \"sm\" ? \"heading--3\" : \"heading--1\";\n\n  return (\n    <Link\n      className={clsx(\"PrimaryCTAButton\", {\n        \"PrimaryCTAButton--active\": active,\n        \"PrimaryCTAButton--dark\": dark,\n        \"PrimaryCTAButton--lg\": size === \"lg\",\n      })}\n      {...props}\n    >\n      <div className={\"PrimaryCTAButton__inner\"}>\n        <span className={clsx(textStyle, \"PrimaryCTAButton__parenthesisL\")}>\n          (\n        </span>\n        <span className={clsx(textStyle, \"px-2\")}>{children}</span>\n        <span className={clsx(textStyle, \"PrimaryCTAButton__parenthesisR\")}>\n          )\n        </span>\n      </div>\n    </Link>\n  );\n}\n\ntype PrimaryCTAButton = Props & ButtonProps;\n\nexport function PrimaryCTAButton({\n  size = \"sm\",\n  dark = false,\n  active = false,\n  children,\n  ...props\n}: PrimaryCTAButton) {\n  const textStyle = size === \"sm\" ? \"heading--3\" : \"heading--1\";\n\n  return (\n    <button\n      className={clsx(\"PrimaryCTAButton\", {\n        \"PrimaryCTAButton--active\": active,\n        \"PrimaryCTAButton--dark\": dark,\n        \"PrimaryCTAButton--lg\": size === \"lg\",\n      })}\n      {...props}\n    >\n      <div className={clsx(\"PrimaryCTAButton__inner\", textStyle)}>\n        <span className={\"PrimaryCTAButton__parenthesisL\"}>(</span>\n        <span className={clsx(textStyle, \"px-2\")}>{children}</span>\n        <span className={\"PrimaryCTAButton__parenthesisR\"}>)</span>\n      </div>\n    </button>\n  );\n}\n", "import { gsap } from \"gsap\";\nimport { useLayoutEffect } from \"~/hooks\";\nimport TextCloneButton from \"./TextCloneButton\";\nimport useTextAnimation from \"~/components/CTA/useTextAnimation\";\nimport type { ButtonProps } from \"react-html-props\";\nimport clsx from \"clsx\";\n\ninterface Props extends ButtonProps {\n  dark?: boolean;\n  border?: boolean;\n  children: string;\n}\n\nexport function SecondaryCTA({\n  dark = false,\n  children,\n  border = false,\n  ...props\n}: Props) {\n  const { ref } = useTextAnimation<HTMLButtonElement>();\n\n  useLayoutEffect(() => {\n    const ctx = gsap.context((self) => {\n      const bg = self.selector ? self.selector(\".round-background\") : null;\n      const tl = gsap.timeline({ paused: true });\n\n      tl.to(bg, {\n        scaleX: 1.1,\n        duration: 0.3,\n        ease: \"cubic-bezier(0.20, 0.00, 0.20, 1.00)\",\n      });\n\n      const mouseEnter = () => tl.play();\n      const mouseLeave = () => tl.reverse();\n\n      ref.current?.addEventListener(\"mouseenter\", mouseEnter);\n      ref.current?.addEventListener(\"mouseleave\", mouseLeave);\n    }, ref);\n\n    return () => ctx.revert();\n  }, []);\n\n  return (\n    <button\n      ref={ref}\n      {...props}\n      className={clsx(\n        \"label--2 relative rounded-full px-[1.81rem] py-[1.16rem]\",\n        props.className\n      )}\n    >\n      <div\n        className={clsx(\n          dark ? \"bg-black\" : \"bg-white\",\n          border ? \"border border-black/30 bg-white\" : \"\",\n          \"round-background absolute left-0 top-0 h-full w-full rounded-full\"\n        )}\n      ></div>\n      <TextCloneButton className={clsx(dark ? \"text-white\" : \"text-black\")}>\n        {children}\n      </TextCloneButton>\n    </button>\n  );\n}\n", "import { useEffect, useLayoutEffect } from \"react\";\n\n/**\n * @link {https://medium.com/@alexandereardon/uselayouteffect-and-ssr-192986cdcf7a}\n * @link {https://github.com/react-component/overflow/issues/6}\n */\nconst useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n", "import clsx from \"clsx\";\nimport { forwardRef } from \"react\";\nimport type { ReactNode } from \"react\";\nimport type { DivProps } from \"react-html-props\";\n\nexport interface TextCloneButtonProps extends DivProps {\n  children: ReactNode;\n  className?: string;\n}\n\nexport const TextCloneButton = forwardRef<HTMLDivElement, TextCloneButtonProps>(\n  ({ children, className = \"\" }, ref) => {\n    return (\n      <div\n        ref={ref}\n        aria-label={children as string}\n        className={clsx(\n          className,\n          \"relative inline-block overflow-hidden align-middle\"\n        )}\n      >\n        <span className={\"content block\"}>{children}</span>\n        <span className={\"clone absolute block\"}>{children}</span>\n      </div>\n    );\n  }\n);\n\nTextCloneButton.displayName = \"TextCloneButton\";\n\nexport default TextCloneButton;\n", "import { useRef } from \"react\";\nimport { useLayoutEffect } from \"~/hooks\";\nimport { gsap } from \"gsap\";\n\nconst useTextAnimation = <T>() => {\n  const ref = useRef<T>(null);\n\n  useLayoutEffect(() => {\n    const ctx = gsap.context((self) => {\n      const tl = gsap.timeline({ paused: true });\n      const clone = self?.selector ? self?.selector(\".clone\") : null;\n      const content = self?.selector ? self?.selector(\".content\") : null;\n\n      tl.to([content, clone], {\n        y: \"-100%\",\n        duration: 0.35,\n        ease: \"cubic-bezier(0.20, 0.00, 0.20, 1.00)\",\n      });\n\n      const mouseEnter = () => tl.play();\n      const mouseLeave = () => tl.reverse();\n\n      if (ref.current instanceof Element) {\n        ref.current?.addEventListener(\"mouseenter\", mouseEnter);\n        ref.current?.addEventListener(\"mouseleave\", mouseLeave);\n      }\n    }, ref);\n\n    return () => ctx.revert();\n  }, []);\n\n  return { ref };\n};\n\nexport default useTextAnimation;\n", "import clsx from \"clsx\";\nimport { Link } from \"@remix-run/react\";\nimport TextCloneButton from \"./TextCloneButton\";\nimport useTextAnimation from \"~/components/CTA/useTextAnimation\";\nimport type { ReactNode } from \"react\";\nimport type { LinkProps } from \"@remix-run/react\";\n\ninterface Props {\n  dark?: boolean;\n  children: ReactNode;\n}\n\ntype LinkCTAProps = Props & LinkProps;\n\nexport function LinkCTA({\n  dark = false,\n  className,\n  children,\n  ...props\n}: LinkCTAProps) {\n  const { ref } = useTextAnimation<HTMLAnchorElement>();\n\n  return (\n    <Link\n      ref={ref}\n      {...props}\n      className={clsx(\n        className ? className : \"body--3\",\n        \"inline-block\",\n        dark ? \"text-black\" : \"text-white\"\n      )}\n    >\n      <TextCloneButton>{children}</TextCloneButton>\n    </Link>\n  );\n}\n\nexport function ButtonCTA({ dark = false, children, ...props }: Props) {\n  const { ref } = useTextAnimation<HTMLButtonElement>();\n\n  return (\n    <button\n      ref={ref}\n      {...props}\n      className={clsx(\n        \"body--3 inline-block\",\n        dark ? \"text-black\" : \"text-white\"\n      )}\n    >\n      <TextCloneButton>{children}</TextCloneButton>\n    </button>\n  );\n}\n\nexport default LinkCTA;\n", "import clsx from \"clsx\";\nimport { CanvasLogo } from \"~/svg\";\nimport { useNavTheme } from \"~/components/Navigation/NavThemeProvider\";\nimport type { MouseEventHandler } from \"react\";\n\nexport function NavLogoDesktop({\n  onClick,\n}: {\n  onClick: MouseEventHandler<HTMLButtonElement>;\n}) {\n  const { theme } = useNavTheme();\n\n  return (\n    <button\n      onClick={onClick}\n      aria-label={\"CANVAS\"}\n      className={\"desktop-only absolute left-0 right-0 m-auto w-max\"}\n    >\n      <CanvasLogo\n        width={125}\n        height={21}\n        className={clsx(\n          \"transition-colors\",\n          theme === \"transparent\" ? \"fill-white\" : \"fill-black\"\n        )}\n      />\n    </button>\n  );\n}\n\nexport function NavLogoMobile({\n  onClick,\n}: {\n  onClick: MouseEventHandler<HTMLButtonElement>;\n}) {\n  const { theme } = useNavTheme();\n\n  return (\n    <button onClick={onClick} aria-label={\"CANVAS\"} className={\"mobile-only\"}>\n      <CanvasLogo\n        width={78}\n        height={13}\n        className={clsx(\n          \"transition-colors\",\n          theme === \"transparent\" ? \"fill-white\" : \"fill-black\"\n        )}\n      />\n    </button>\n  );\n}\n", "import * as React from \"react\";\nimport type { SVGProps } from \"react\";\nconst SvgCanvasLogo = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={78}\n    height={14}\n    viewBox=\"0 0 78 14\"\n    {...props}\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"m74.673 5.95-2.37-.416c-1.245-.22-1.867-.537-1.867-1.393 0-.855.837-1.442 2.13-1.442s2.274.636 2.394 1.613h2.8C77.497 1.917 75.702.5 72.542.5c-2.824 0-4.93 1.613-4.93 3.959 0 2.223 1.483 3.176 3.494 3.543l2.154.39c1.34.245 1.867.612 1.867 1.394 0 1.002-1.005 1.539-2.298 1.539-1.292 0-2.585-.586-2.729-1.881h-2.92c.263 2.712 2.537 4.056 5.697 4.056 2.896 0 5.122-1.564 5.122-3.934 0-2.053-1.197-3.25-3.327-3.617ZM8.497 5.046c-.239-1.344-1.029-2.2-2.417-2.2C4.141 2.846 3.064 4.46 3.064 7c0 2.542 1.077 4.154 3.016 4.154 1.388 0 2.178-.88 2.418-2.199h2.896c-.335 2.786-2.274 4.545-5.29 4.545C2.537 13.5 0 11.008 0 7 0 2.993 2.537.5 6.104.5c3.016 0 4.955 1.784 5.29 4.546H8.497Zm38.286 5.106h.047L50.135.794h2.992l-4.668 12.413h-3.35L40.32.794h3.088l3.375 9.358ZM33.248.634A4.787 4.787 0 0 1 34.388.5c2.777 0 4.453 1.76 4.453 4.741v7.966h-3.064V5.974c0-1.98-.91-3.006-2.441-3.006-1.533 0-2.73 1.002-2.73 3.495v6.744h-3.063V.794h3.016V3.44s.35-1.896 2.132-2.63a4.29 4.29 0 0 1 .556-.177Zm-8.751 4.68C24.497 2.09 22.606.5 19.302.5c-2.94 0-4.955 1.51-5.274 4.09-.014.114-.029.35-.025.456h2.948v-.027c0-.085-.001-.244.014-.381.13-1.098.936-1.816 2.241-1.816 1.128 0 1.94.483 2.205 1.476l.003.013c.115.468-.022 1.33-1.1 1.481-.038.006-.078.01-.118.014h-.002l-2.328.265c-2.465.293-4.38 1.32-4.38 3.812 0 2.249 1.723 3.592 4.093 3.592 1.939 0 3.47-.806 4.045-2.223 0 .61.048 1.27.168 1.955h2.944c-.192-1.002-.24-1.955-.24-3.104v-4.79.001Zm-2.992 3.08c0 1.954-1.508 2.907-3.088 2.907-1.22 0-1.891-.61-1.891-1.588 0-1.295.982-1.589 2.274-1.76l1.43-.168c1.079-.144 1.275-.92 1.275-.92v1.528ZM59.775.5C63.08.5 64.97 2.09 64.97 5.314v4.79c0 1.148.048 2.1.24 3.103h-2.945a11.367 11.367 0 0 1-.167-1.955c-.575 1.417-2.107 2.223-4.046 2.223-2.37 0-4.093-1.343-4.093-3.592 0-2.492 1.915-3.519 4.38-3.812l2.328-.265h.002c.04-.004.08-.008.118-.014 1.079-.152 1.216-1.013 1.1-1.481l-.002-.013c-.266-.993-1.077-1.476-2.205-1.476-1.305 0-2.111.718-2.24 1.816a3.478 3.478 0 0 0-.016.38v.028h-2.948a4.213 4.213 0 0 1 .025-.456C54.821 2.01 56.836.5 59.776.5Zm-.885 10.801c1.58 0 3.088-.953 3.088-2.908V6.865s-.196.776-1.275.92l-1.43.168C57.981 8.124 57 8.418 57 9.713c0 .977.67 1.588 1.891 1.588Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\nexport default SvgCanvasLogo;\n", "import * as React from \"react\";\nimport type { SVGProps } from \"react\";\nconst SvgClearIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={26}\n    height={23}\n    fill=\"none\"\n    viewBox=\"0 0 26 23\"\n    {...props}\n  >\n    <path\n      fill=\"#fff\"\n      d=\"M0 6.357c.13-.104.268-.2.387-.315C2.317 4.185 4.244 2.328 6.172.468 6.32.325 6.458.17 6.622 0l1.693 1.717L4.69 5.24h.747c3.733 0 7.467.02 11.2-.006 4.376-.032 8.106 2.885 9.076 6.764.111.445.192.895.287 1.342v1.552c-.114.52-.187 1.051-.349 1.558-1.15 3.595-3.647 5.762-7.516 6.436-.469.082-.954.107-1.433.108-4.486.008-8.971.006-13.457.006H2.81v-2.12c.208-.006.43-.018.653-.018 4.37 0 8.74.005 13.111-.005 2.038-.004 3.825-.656 5.215-2.11 1.88-1.964 2.41-4.273 1.502-6.78-.89-2.464-2.76-3.935-5.453-4.4a6.073 6.073 0 0 0-1.032-.093C12.898 7.468 8.99 7.47 5.081 7.47h-.364c1.239 1.273 2.457 2.426 3.632 3.627l-1.76 1.586c-1.272-1.206-2.616-2.474-3.954-3.749-.751-.716-1.492-1.44-2.242-2.158C.273 6.66.132 6.57 0 6.468v-.111Z\"\n    />\n  </svg>\n);\nexport default SvgClearIcon;\n", "export const MOBILE_BREAKPOINT = 768;\n\nexport const INSTAGRAM_URL = \"https://www.instagram.com/canvascreative\";\nexport const TWITTER_URL = \"https://twitter.com/canvascreative\";\nexport const LINKEDIN_URL = \"https://www.linkedin.com/company/canvascreative\";\n", "import React, { Fragment } from \"react\";\nimport ContactPage from \"~/slices/Contact/ContactPage\";\nimport { Dialog, Transition } from \"@headlessui/react\";\n\nfunction LayoutContact({\n  show,\n  onClose,\n}: {\n  show: boolean;\n  onClose: (show: boolean) => void;\n}) {\n  return (\n    <Transition show={show} as={Fragment}>\n      <Dialog onClose={onClose} className={\"relative\"}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-500\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-out duration-500\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div\n            className={\n              \"noise-background fixed inset-0 h-full w-full bg-pure-black\"\n            }\n          />\n        </Transition.Child>\n\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-500\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-out duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div\n            data-lenis-prevent={true}\n            className={\"fixed inset-0 h-full w-full overflow-scroll\"}\n          >\n            <ContactPage />\n          </div>\n        </Transition.Child>\n      </Dialog>\n    </Transition>\n  );\n}\n\nexport default LayoutContact;\n", "import clsx from \"clsx\";\nimport { validator } from \"~/routes/contact\";\nimport { useFetcher } from \"@remix-run/react\";\nimport ContactForm from \"~/slices/Contact/ContactForm\";\nimport { LinkCTA } from \"~/components/CTA\";\nimport { INSTAGRAM_URL, LINKEDIN_URL, TWITTER_URL } from \"~/lib/constants\";\n\nconst ContactPage = () => {\n  const fetcher = useFetcher();\n\n  return (\n    <div\n      className={\n        \"noise-background flex min-h-screen items-start bg-pure-black pt-header text-white md:items-center md:pt-headerDesk\"\n      }\n    >\n      <div className=\"grid-container w-full pb-24 pt-24\">\n        <div className=\"col-span-4 mb-5 border-t border-t-white/30 md:col-span-12\"></div>\n\n        <div className=\"col-span-4 mb-12 md:order-1 md:col-start-1 md:mb-0\">\n          <h1 className={\"heading--2 py-6 md:mb-20 md:py-0\"}>Let\u2019s chat</h1>\n        </div>\n\n        <div\n          className={\n            \"col-span-4 md:order-2 md:col-span-6 md:col-start-7 md:mb-20\"\n          }\n        >\n          <div className={\"relative overflow-hidden\"}>\n            <div\n              className={clsx(\n                \"absolute inset-0 transition delay-75 duration-300\",\n                fetcher.data?.ok || false\n                  ? \"translate-y-0 opacity-100\"\n                  : \"translate-y-[1rem] opacity-0\"\n              )}\n            >\n              <p className={\"body--1\"}>\n                Your message has been sent, thank you! <br />\n                Someone from our team will be reaching out to you shortly.\n              </p>\n            </div>\n\n            <div\n              className={clsx(\n                \"transition-transform duration-300\",\n                !fetcher.data ? \"translate-y-0\" : \"-translate-y-full\"\n              )}\n            >\n              <p className={\"body--1\"}>\n                We\u2019re curious to learn about your company and how we could help.\n                Fill out the form below or if you would prefer to email us hit\n                us up at{\" \"}\n                <a href=\"mailto:biz@canvascreative.co\">biz@canvascreative.co</a>\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-span-4 mb-14 md:order-3 md:col-span-6 md:col-start-7 md:mb-0\">\n          <ContactForm fetcher={fetcher} validator={validator} />\n        </div>\n\n        <div className={\"col-span-4 md:order-2 md:col-start-1\"}>\n          <div className={\"mb-7\"}>\n            <p className={\"label--2\"}>new business</p>\n            <LinkCTA className={\"body--3\"} to=\"mailto:biz@canvascreative.co\">\n              biz@canvascreative.co\n            </LinkCTA>\n          </div>\n          <div className={\"mb-7\"}>\n            <p className={\"label--2\"}>careers</p>\n            <LinkCTA\n              className={\"body--3\"}\n              to=\"mailto:careers@canvascreative.co\"\n            >\n              careers@canvascreative.co\n            </LinkCTA>\n          </div>\n          <div className={\"mb-14\"}>\n            <p className={\"label--2\"}>general</p>\n            <LinkCTA className={\"body--3\"} to=\"mailto:info@canvascreative.co\">\n              info@canvascreative.co\n            </LinkCTA>\n          </div>\n\n          <div className={\"flex gap-4 md:absolute md:bottom-0 md:pb-8\"}>\n            <LinkCTA className={\"body--3\"} target={\"_blank\"} to={INSTAGRAM_URL}>\n              Instagram\n            </LinkCTA>\n            <LinkCTA className={\"body--3\"} target={\"_blank\"} to={LINKEDIN_URL}>\n              LinkedIn\n            </LinkCTA>\n            <LinkCTA className={\"body--3\"} target={\"_blank\"} to={TWITTER_URL}>\n              Twitter\n            </LinkCTA>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactPage;\n", "import { z } from \"zod\";\nimport { json } from \"@remix-run/node\";\nimport { withZod } from \"@remix-validated-form/with-zod\";\nimport { validationError } from \"remix-validated-form\";\nimport ContactPage from \"~/slices/Contact/ContactPage\";\nimport type { DataFunctionArgs } from \"@remix-run/node\";\n\nexport const validator = withZod(\n  z.object({\n    message: z.string().min(1, { message: \"This field is required\" }),\n    fullName: z.string().min(1, { message: \"This field is required\" }),\n    email: z\n      .string()\n      .min(1, { message: \"This field is required\" })\n      .email(\"Please enter a valid email address (e.g. email@domain.com).\"),\n  })\n);\n\n/**\n * https://www.youtube.com/watch?v=mlM7L9fgRMc\n * https://github.com/brittneypostma/netlify-forms-with-remix/tree/main\n * https://docs.netlify.com/forms/setup/#work-with-javascript-rendered-forms\n * https://www.netlify.com/blog/2017/07/20/how-to-integrate-netlifys-form-handling-in-a-react-app/\n * @param request\n */\nexport const action = async ({ request }: DataFunctionArgs) => {\n  const data = await request.formData();\n  const validation = await validator.validate(data);\n\n  if (validation.error) return validationError(validation.error);\n\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n  const urlencoded = new URLSearchParams();\n  urlencoded.append(\"form-name\", \"contact\");\n  urlencoded.append(\"fullName\", validation.data.fullName);\n  urlencoded.append(\"message\", validation.data.message);\n  urlencoded.append(\"email\", validation.data.email);\n\n  const response = fetch(\"https://main--canvas-v4-prod.netlify.app/form\", {\n    method: \"POST\",\n    headers: myHeaders,\n    body: urlencoded,\n    redirect: \"follow\",\n  })\n    .then((response) => response.json())\n    .catch((error) => error);\n\n  return json({ ok: true, response });\n};\n\nconst Page = () => {\n  return <ContactPage />;\n};\n\nexport default Page;\n", "import clsx from \"clsx\";\nimport {\n  useIsSubmitting,\n  ValidatedForm,\n  useControlField,\n} from \"remix-validated-form\";\nimport { Input, TextArea } from \"~/components/Input\";\nimport { PrimaryCTAButton } from \"~/components/CTA\";\nimport type { Validator } from \"remix-validated-form\";\nimport type { FetcherWithComponents } from \"@remix-run/react\";\n\ntype InputTypes = {\n  fullName: string;\n  email: string;\n  message: string;\n};\n\nfunction ContactSubmitButton({\n  submittedOk,\n  isFilled,\n}: {\n  submittedOk: boolean;\n  isFilled: boolean;\n}) {\n  const isSubmitting = useIsSubmitting(\"contact\");\n  return (\n    <div className={\"flex justify-end\"}>\n      {submittedOk ? (\n        <h1 className={\"heading--1\"}>Sent</h1>\n      ) : (\n        <PrimaryCTAButton\n          dark\n          size={\"lg\"}\n          type={\"submit\"}\n          disabled={isSubmitting || !isFilled}\n        >\n          {isSubmitting ? \"Sending\" : \"Send\"}\n        </PrimaryCTAButton>\n      )}\n    </div>\n  );\n}\n\nfunction ContactForm({\n  fetcher,\n  validator,\n}: {\n  fetcher: FetcherWithComponents<{ ok: boolean }>;\n  validator: Validator<InputTypes>;\n}) {\n  const submittedOk = fetcher.data?.ok || false;\n  const isSubmitting = fetcher.state === \"submitting\";\n\n  const [fullName, setFullName] = useControlField<string>(\n    \"fullName\",\n    \"contactForm\"\n  );\n  const [email, setEmail] = useControlField<string>(\"email\", \"contactForm\");\n  const [message, setMessage] = useControlField<string>(\n    \"message\",\n    \"contactForm\"\n  );\n\n  const isFilled = Boolean(fullName) && Boolean(email) && Boolean(message);\n\n  return (\n    <div className={\"relative\"}>\n      <ValidatedForm\n        method=\"post\"\n        fetcher={fetcher}\n        validator={validator}\n        id={\"contactForm\"}\n      >\n        <div\n          className={clsx(\n            \"transition-opacity\",\n            isSubmitting || submittedOk\n              ? \"pointer-events-none select-none opacity-30\"\n              : \"pointer-events-auto opacity-100\"\n          )}\n        >\n          <Input\n            type=\"text\"\n            name={\"fullName\"}\n            label={\"Full Name*\"}\n            containerClassName={\"mb-5\"}\n            value={fullName || \"\"}\n            onChange={(e) => setFullName(e.target.value)}\n          />\n          <Input\n            type=\"text\"\n            name={\"email\"}\n            label={\"Email*\"}\n            containerClassName={\"mb-5\"}\n            value={email || \"\"}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <TextArea\n            name={\"message\"}\n            label={\"Project Detail*\"}\n            containerClassName={\"mb-10\"}\n            placeholder={\n              \"Let\u2019s start with a brief overview of what you\u2019re looking for, budget range, and timeline.\"\n            }\n            value={message || \"\"}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </div>\n        <ContactSubmitButton submittedOk={submittedOk} isFilled={isFilled} />\n      </ValidatedForm>\n    </div>\n  );\n}\n\nexport default ContactForm;\n", "import clsx from \"clsx\";\nimport { useRef } from \"react\";\nimport { useField } from \"remix-validated-form\";\nimport { Label, Wrapper, ErrorMessage } from \"~/components/Input/InputHelpers\";\nimport type { FormInputProps } from \"~/components/Input/InputHelpers\";\nimport type { InputProps } from \"react-html-props\";\n\nfunction Input({\n  id,\n  name,\n  label,\n  placeholder,\n  containerClassName,\n  ...props\n}: FormInputProps & InputProps) {\n  const ref = useRef<HTMLInputElement>(null);\n  const { error, getInputProps } = useField(name, {\n    validationBehavior: {\n      initial: \"onSubmit\",\n      whenTouched: \"onSubmit\",\n      whenSubmitted: \"onSubmit\",\n    },\n  });\n\n  return (\n    <Wrapper\n      onClick={() => ref.current?.focus()}\n      className={containerClassName}\n    >\n      <input\n        ref={ref}\n        id={name}\n        name={name}\n        className={clsx(\n          \"body--1 peer w-full bg-transparent outline-0 ring-0 transition-[padding]\",\n          error ? \"pb-8 text-red\" : \"pb-5 text-white\"\n        )}\n        placeholder={placeholder ? placeholder : \" \"}\n        {...getInputProps({\n          id: name,\n          ...props,\n        })}\n      />\n      <Label htmlFor={name}>{label}</Label>\n      <ErrorMessage error={error} />\n    </Wrapper>\n  );\n}\n\nexport default Input;\n", "import clsx from \"clsx\";\nimport Transition from \"~/components/Transition\";\nimport type { DivProps, LabelProps } from \"react-html-props\";\n\nexport interface FormInputProps {\n  name: string;\n  label: string;\n  error?: string;\n  containerClassName?: string;\n}\n\nexport function ErrorMessage({ error }: { error?: string }) {\n  return (\n    <Transition.FadeInBottom show={Boolean(error)}>\n      <div className={\"label--2 absolute bottom-5 left-0 text-red\"}>\n        {error}\n      </div>\n    </Transition.FadeInBottom>\n  );\n}\n\nexport function Wrapper({ className, ...props }: DivProps) {\n  return (\n    <div className={\"cursor-text\"}>\n      <div\n        className={clsx(\"relative border-b border-b-white/30 pt-6\", className)}\n        {...props}\n      />\n    </div>\n  );\n}\n\nexport function Label(props: LabelProps) {\n  return (\n    <label\n      className={\n        \"body--1 absolute left-0 top-0 origin-top-left scale-[0.6] transition-transform peer-placeholder-shown:scale-100 peer-focus:scale-[0.6]\"\n      }\n      {...props}\n    />\n  );\n}\n", "import { Transition } from \"@headlessui/react\";\nimport type { ReactNode } from \"react\";\n\ninterface Props {\n  show: boolean;\n  children: ReactNode;\n}\n\nfunction FadeInOut({ show, ...props }: Props) {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition-opacity duration-150 ease-in-out \"\n      enterFrom=\"opacity-0\"\n      enterTo=\"opacity-100\"\n      leave=\"transition-opacity duration-150 ease-in-out \"\n      leaveFrom=\"opacity-100\"\n      leaveTo=\"opacity-0\"\n      {...props}\n    />\n  );\n}\n\nfunction FadeInBottom({ show, ...props }: Props) {\n  return (\n    <Transition\n      show={show}\n      enter=\"transition-opacity transition-transform duration-150 ease-in-out \"\n      enterFrom=\"opacity-0 translate-y-1/2\"\n      enterTo=\"opacity-100 translate-y-0\"\n      leave=\"transition-opacity duration-150 ease-in-out \"\n      leaveFrom=\"opacity-100 translate-y-0\"\n      leaveTo=\"opacity-0 translate-y-1/2\"\n      {...props}\n    />\n  );\n}\n\ninterface SwitchProps {\n  show: boolean;\n  onTrue: (show: boolean) => ReactNode;\n  onFalse: (show: boolean) => ReactNode;\n}\n\nfunction SwitchFadeInFadeOut({ show, onTrue, onFalse, ...props }: SwitchProps) {\n  return (\n    <div className={\"relative\"}>\n      <Transition\n        show={show}\n        enterTo=\"opacity-100 translate-y-0\"\n        enterFrom=\"opacity-0 translate-y-1/2\"\n        enter=\"transition-opacity transition-transform duration-150 ease-in-out\"\n        leaveTo=\"opacity-0 translate-y-[1rem]\"\n        leaveFrom=\"opacity-100 translate-y-0\"\n        leave=\"transition-opacity transition-transform duration-200 ease-in-out \"\n        {...props}\n      >\n        {onTrue(show)}\n      </Transition>\n      <Transition\n        show={!show}\n        enter=\"transition-opacity transition-transform duration-150 ease-in-out \"\n        enterFrom=\"opacity-0 translate-y-[-1rem]\"\n        enterTo=\"opacity-100 translate-y-0\"\n        leave=\"transition-opacity transition-transform duration-200 ease-in-out \"\n        leaveFrom=\"opacity-100 translate-y-0\"\n        leaveTo=\"opacity-0 translate-y-[1rem]\"\n        {...props}\n      >\n        {onFalse(show)}\n      </Transition>\n    </div>\n  );\n}\n\nexport default {\n  FadeInOut,\n  FadeInBottom,\n  SwitchFadeInFadeOut,\n};\n", "import clsx from \"clsx\";\nimport { useRef } from \"react\";\nimport { useControlField, useField } from \"remix-validated-form\";\nimport { ErrorMessage, Label, Wrapper } from \"~/components/Input/InputHelpers\";\nimport type { TextAreaProps } from \"react-html-props\";\nimport type { FormInputProps } from \"~/components/Input/InputHelpers\";\n\nfunction TextArea({\n  id,\n  name,\n  label,\n  placeholder,\n  containerClassName,\n  ...props\n}: TextAreaProps & FormInputProps) {\n  const ref = useRef<HTMLTextAreaElement>(null);\n\n  const [value, setValue] = useControlField<string>(name);\n  const { error, getInputProps } = useField(name, {\n    validationBehavior: {\n      initial: \"onSubmit\",\n      whenTouched: \"onSubmit\",\n      whenSubmitted: \"onSubmit\",\n    },\n  });\n\n  // useAutosizeTextArea(ref.current, value);\n\n  return (\n    <Wrapper\n      onClick={() => ref.current?.focus()}\n      className={containerClassName}\n    >\n      <textarea\n        ref={ref}\n        id={name}\n        name={name}\n        rows={2}\n        placeholder={placeholder ? placeholder : \" \"}\n        className={clsx(\n          \"body--1 peer min-h-[150px] w-full resize-none bg-transparent py-2 placeholder-white/30 outline-0 ring-0 transition-[height]\",\n          error ? \"text-red\" : \"text-white\"\n        )}\n        {...getInputProps({\n          id: name,\n          value,\n          onChange: (e) => setValue(e.target.value),\n          ...props,\n        })}\n      />\n      <Label htmlFor={name}>{label}</Label>\n      <ErrorMessage error={error} />\n    </Wrapper>\n  );\n}\n\nexport default TextArea;\n", "import clsx from \"clsx\";\nimport { gsap } from \"gsap\";\nimport easings from \"~/lib/easings\";\nimport ProjectHero, { animateBanner } from \"~/components/ProjectHero\";\nimport { useNavigate } from \"react-router\";\nimport { Fragment, useCallback, useEffect, useRef, useState } from \"react\";\nimport { useNavTheme } from \"~/components/Navigation/NavThemeProvider\";\nimport { Video } from \"~/components/Video\";\nimport { Image } from \"~/components/Image\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport type {\n  WorkmenuDocument,\n  WorkmenuDocumentDataBodyWorkmenuitemSlice,\n} from \"types.generated\";\nimport type { ButtonProps } from \"react-html-props\";\nimport type { KeyTextField } from \"@prismicio/types\";\nimport type { MouseEvent } from \"react\";\nimport type { ProjectHeroTableProps } from \"~/components/ProjectHero/ProjectHeroTable\";\nimport { useToggle } from \"usehooks-ts\";\n\ninterface LayoutWorkMenuItemProps extends ButtonProps {\n  index: number;\n  length: number;\n  hovered: boolean;\n  someIsHovered: boolean;\n  item: WorkmenuDocumentDataBodyWorkmenuitemSlice;\n}\n\nfunction LayoutWorkMenuItem({\n  index,\n  length,\n  hovered,\n  someIsHovered,\n  item,\n  ...props\n}: LayoutWorkMenuItemProps) {\n  const refs = useRef<Array<HTMLVideoElement>>([]);\n  const opacity = someIsHovered && !hovered ? \"opacity-50\" : \"opacity-100\";\n  const opacityTransition = \"transition-opacity duration-200\";\n\n  const setRefs = useCallback((node: HTMLVideoElement | null) => {\n    if (node) refs.current = [...refs.current, node];\n  }, []);\n\n  const media = item.items.map((_it) => ({\n    image: _it.thumbnail,\n    video: _it.thumbnail_video,\n  }));\n\n  useEffect(() => {\n    if (hovered) {\n      refs.current.forEach((video) => video.play());\n    } else {\n      refs.current.forEach((video) => {\n        video.pause();\n        video.currentTime = 0;\n      });\n    }\n  }, [hovered]);\n\n  return (\n    <button\n      {...props}\n      className={\"LayoutWorkMenuItem grid-container cursor-pointer\"}\n    >\n      <div\n        className={`col-span-2 flex h-full items-center ${opacity} ${opacityTransition}`}\n      >\n        <h1 className={\"LayoutWorkMenuItem__title label--2 text-white\"}>\n          <span>{item.primary.name}</span>\n        </h1>\n        <span className={\"label--2 mobile-only text-white\"}>\n          {`${index + 1}/${length}`}\n        </span>\n      </div>\n\n      <div\n        className={`desktop-only col-span-2 flex h-full items-center ${opacity} ${opacityTransition}`}\n      >\n        <h2 className={\"label--2 col-span-1 text-white\"}>\n          {`${index + 1}/${length}`}\n        </h2>\n      </div>\n\n      <div\n        className={`col-span-2 flex h-full items-center ${opacity} ${opacityTransition}`}\n      >\n        <h3 className={\"label--2  text-left text-white\"}>\n          {item.primary.capabilities?.split(\", \").map((_it, _idx) => (\n            <span key={`LayoutWorkMenuItem-capabilities-${_it}-${_idx}`}>\n              {_it}\n              <br />\n            </span>\n          ))}\n        </h3>\n      </div>\n\n      <div\n        className={clsx(\n          opacityTransition,\n          someIsHovered && !hovered ? \"opacity-0\" : \"opacity-100\",\n          \"pointer-events-none col-span-5 col-start-8 hidden gap-[20px] md:grid md:grid-cols-5\"\n        )}\n      >\n        {media.map((item, _idx) => {\n          return (\n            <div\n              key={`LayoutWorkMenuItemImage-${index}-${_idx}`}\n              className={\"aspect-square overflow-hidden\"}\n            >\n              {\"url\" in item.video && item.video.url ? (\n                <Video\n                  lazy={false}\n                  loop={true}\n                  muted={true}\n                  playsInline={true}\n                  // @ts-ignore\n                  src={item.video.url}\n                  poster={item.image.url || \"\"}\n                  className={\"w-full\"}\n                  ref={(node) => setRefs(node)}\n                />\n              ) : (\n                <Image\n                  loading={\"eager\"}\n                  field={item.image}\n                  className={\"w-full\"}\n                />\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </button>\n  );\n}\n\nfunction LayoutWorkMenu({\n  show,\n  onClose,\n  data,\n}: {\n  show: boolean;\n  onClose: () => void;\n  data: WorkmenuDocument;\n}) {\n  const navigate = useNavigate();\n  const [locked, setLocked] = useState<boolean>(false);\n  const [hoveredIndex, setHoveredIndex] = useState<number | null>(null);\n\n  const onItemClick = (\n    e: MouseEvent<HTMLButtonElement>,\n    slug: string | KeyTextField,\n    index: number\n  ) => {\n    setLocked(true);\n\n    const tl = gsap.timeline({\n      onComplete: () => {\n        navigate(`/work/${slug}`, { preventScrollReset: false });\n\n        setTimeout(() => {\n          onClose();\n          setLocked(false);\n        }, 200);\n      },\n    });\n\n    const duration = 1;\n    const ease = easings.mask;\n\n    tl.to(\".LayoutWorkMenuItem\", {\n      opacity: 0,\n      duration: 0.5,\n    });\n\n    if (e.target instanceof Element) {\n      const container = document.querySelector(\".LayoutWorkMenu-Hero\")\n        ?.children[index];\n      const title = e.target.querySelector(\".LayoutWorkMenuItem__title\");\n      const background = document\n        .querySelectorAll(\".LayoutWorkMenu-Background\")\n        [index].querySelector(\"img\");\n\n      if (title && container && background) {\n        tl.to(\n          background,\n          {\n            ease,\n            duration: duration - 0.3,\n            y: background ? background?.scrollHeight - window.innerHeight : 0,\n          },\n          0\n        );\n\n        animateBanner(\n          tl,\n          {\n            ease,\n            duration,\n            position: 0.2,\n            stagger: 0.02,\n          },\n          {\n            title,\n            scope: container,\n          }\n        );\n      }\n    }\n  };\n\n  const onMouseEnter = (index: number) => {\n    if (!locked) setHoveredIndex(index);\n  };\n\n  const onMouseLeave = () => {\n    if (!locked) setHoveredIndex(null);\n  };\n\n  return (\n    <Transition show={show} as={Fragment}>\n      <Dialog onClose={onClose} className={\"relative\"}>\n        <Transition.Child\n          unmount={false}\n          as={Fragment}\n          enter=\"ease-out duration-500\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-out duration-500\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div\n            className={clsx(\n              locked ? \"\" : \"noise-background bg-pure-black\",\n              \"fixed inset-0 h-full w-full\"\n            )}\n          />\n        </Transition.Child>\n\n        <Transition.Child\n          unmount={false}\n          as={Fragment}\n          enter=\"ease-out duration-500\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-out duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className={\"fixed inset-0 h-full w-full\"}>\n            {data.data.body.map((item, _idx) => {\n              const hovered = hoveredIndex === _idx;\n\n              return (\n                <div\n                  key={`LayoutWorkMenuItem-background--${_idx}`}\n                  className={\n                    \"LayoutWorkMenu-Background pointer-events-none absolute flex h-full w-full items-end\"\n                  }\n                >\n                  <Image\n                    className={clsx(\n                      hovered ? \"opacity-100\" : \"opacity-0 delay-100\",\n                      \"absolute w-full items-start object-cover transition-opacity duration-500 ease-out\"\n                    )}\n                    field={item.primary.background}\n                  />\n                </div>\n              );\n            })}\n            <div className={\"LayoutWorkMenu-Hero\"}>\n              {data.data.body.map((item, _idx) => {\n                if (\"data\" in item.primary.project_page_data) {\n                  return (\n                    <ProjectHero\n                      absolute\n                      isClone={true}\n                      key={`LayoutWorkMenu-Hero-${_idx}`}\n                      tableData={\n                        item.primary.project_page_data\n                          .data as ProjectHeroTableProps\n                      }\n                    />\n                  );\n                }\n              })}\n            </div>\n            <div className=\"relative h-full w-full flex-col justify-end pt-40 md:flex md:items-end md:pb-[30px] md:pt-headerDesk\">\n              {data.data.body.map((item, _idx, arr) => {\n                const hovered = hoveredIndex === _idx;\n                const someIsHovered = hoveredIndex !== null;\n\n                return (\n                  <div\n                    key={`LayoutWorkMenuItem-${item.primary.link}-${_idx}`}\n                    className={\"LayoutWorkMenuItem mb-5 last:mb-0\"}\n                  >\n                    <LayoutWorkMenuItem\n                      hovered={hovered}\n                      someIsHovered={someIsHovered}\n                      item={item}\n                      index={_idx}\n                      length={arr.length}\n                      onMouseLeave={onMouseLeave}\n                      onMouseEnter={() => onMouseEnter(_idx)}\n                      onClick={(e) => onItemClick(e, item.primary.link, _idx)}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </Transition.Child>\n      </Dialog>\n    </Transition>\n  );\n}\n\nexport default LayoutWorkMenu;\n", "import { gsap } from \"gsap\";\nimport CustomEase from \"gsap/dist/CustomEase\";\n\ngsap.registerPlugin(CustomEase);\n\nconst easings = {\n  mask: CustomEase.create(\"custom\", \"M0,0 C0.77,0 0.18,1 1,1\"),\n};\n\nexport default easings;\n", "import clsx from \"clsx\";\nimport { gsap } from \"gsap\";\nimport Flip from \"gsap/dist/Flip\";\nimport { useRef } from \"react\";\nimport { useLayoutEffect } from \"~/hooks\";\nimport { Link } from \"@remix-run/react\";\nimport { asText } from \"@prismicio/richtext\";\nimport { Image } from \"~/components/Image\";\nimport TextCta from \"~/components/CTA/TextCTA\";\nimport { Video } from \"~/components/Video\";\nimport ProjectHeroTable from \"~/components/ProjectHero/ProjectHeroTable\";\nimport type { ReactNode } from \"react\";\nimport type { ProjectHeroTableProps } from \"~/components/ProjectHero/ProjectHeroTable\";\nimport type { DivProps, ButtonProps } from \"react-html-props\";\nimport type {\n  FilledLinkToWebField,\n  ImageField,\n  KeyTextField,\n  RichTextField,\n} from \"@prismicio/types\";\nimport { useLockedBody } from \"usehooks-ts\";\nimport easings from \"~/lib/easings\";\n\ninterface TitleProps extends DivProps {\n  field?: RichTextField;\n  animateTitles?: boolean;\n}\n\nexport const ProjectHeroTitle = ({\n  field,\n  children,\n  animateTitles,\n  ...props\n}: TitleProps) => {\n  return (\n    <div\n      {...props}\n      className={clsx(\n        \"ProjectHeroTitle\",\n        \"display--1 leading--none relative col-span-4 my-12 md:col-span-12 md:mb-32 md:mt-24 md:h-[7rem]\",\n        props.className ? props.className : \"text-white\"\n      )}\n    >\n      {field ? (\n        <h1\n          className={\"display--1 overflow-hidden\"}\n          dangerouslySetInnerHTML={{\n            __html: field ? `${asText(field)}` : \"\",\n          }}\n        />\n      ) : animateTitles ? (\n        <span className={\"hero-table-row__item block\"}>{children}</span>\n      ) : (\n        children\n      )}\n    </div>\n  );\n};\n\nexport const ProjectHeroSubtitle = ({\n  children,\n  field,\n  animateTitles,\n  ...props\n}: TitleProps) => {\n  return (\n    <div\n      {...props}\n      className={clsx(\n        \"ProjectHeroSubtitle\",\n        \"heading--3 relative col-span-4 mb-12 text-white md:col-span-12 md:mb-2 md:h-[1rem] md:pb-20\",\n        props.className\n      )}\n    >\n      {field ? (\n        <h3 className={\"heading--3 overflow-hidden\"}>\n          {animateTitles ? (\n            <span className={\"hero-table-row__item block\"}>\n              {field ? asText(field) : \"\"}\n            </span>\n          ) : field ? (\n            asText(field)\n          ) : (\n            \"\"\n          )}\n        </h3>\n      ) : (\n        children\n      )}\n    </div>\n  );\n};\n\ninterface ProjectHeroCTAProps {\n  isClone?: boolean;\n  field?: RichTextField | string;\n}\n\nexport function ProjectHeroCTA({\n  isClone = false,\n  field,\n  ...props\n}: ProjectHeroCTAProps & ButtonProps) {\n  return (\n    <div className=\"desktop-only relative overflow-hidden md:col-span-5\">\n      <button {...props} className={clsx(\"overflow-hidden\", props.className)}>\n        <div className={\"hero-table-row__item flex items-center\"}>\n          <span className={\"heading--3 mr-1 inline-block text-white\"}>( </span>\n          <TextCta className={\"heading--3 text-white\"}>\n            {typeof field === \"string\" ? field : field ? asText(field) : \"\"}\n          </TextCta>\n          <span className={\"heading--3 ml-1 inline-block text-white\"}> )</span>\n        </div>\n      </button>\n    </div>\n  );\n}\n\ninterface ProjectBackgroundProps {\n  field: ImageField;\n  isClone: boolean;\n  className?: string;\n}\n\nexport function ProjectBackground({\n  field,\n  isClone,\n  ...props\n}: ProjectBackgroundProps) {\n  return (\n    <div\n      className={clsx(\n        \"ProjectHeroBackground\",\n        \"absolute flex h-full w-full overflow-hidden\",\n        isClone ? \"items-end\" : \"items-start\"\n      )}\n    >\n      <Image\n        {...props}\n        field={field}\n        className={clsx(props?.className, \"min-h-screen w-full object-cover\")}\n      />\n    </div>\n  );\n}\n\nexport const ProjectHeroLine = ({ top = false, className = \"\" }) => {\n  return (\n    <div\n      className={clsx(\n        className,\n        top ? \"top-0\" : \"bottom-0\",\n        \"hero-table-line absolute bottom-0 left-0 block h-[1px] w-full origin-left bg-white/30\"\n      )}\n    />\n  );\n};\n\ntype GSAPAnimationFunction = (\n  tl: GSAPTimeline,\n  vars: GSAPTimelineVars,\n  elements: {\n    title: Element;\n    subtitle?: Element;\n    background?: Element;\n    scope: Element | Document;\n    itemsScope?: Element;\n  }\n) => void;\n\nexport const animateBanner: GSAPAnimationFunction = (\n  tl,\n  { position, stagger, ease, duration, ...vars },\n  { title, subtitle, scope, itemsScope }\n) => {\n  // ANIMATE TABLE\n  const tableLines = itemsScope\n    ? itemsScope.querySelectorAll(\".hero-table-line\")\n    : scope.querySelectorAll(\".hero-table-line\");\n\n  const tableItems = itemsScope\n    ? itemsScope.querySelectorAll(\".hero-table-row__item\")\n    : scope.querySelectorAll(\".hero-table-row__item\");\n\n  tl.to(\n    tableLines,\n    {\n      scaleX: 1,\n      ...vars,\n    },\n    position\n  );\n  tl.to(\n    tableItems,\n    {\n      y: \"0%\",\n      ease,\n      duration,\n      stagger,\n      ...vars,\n    },\n    position\n  );\n  // ADD ANIMATION TO TEXT SIZES\n  const titleText = title.querySelector(\"span\");\n  tl.to(\n    titleText,\n    {\n      ease,\n      duration,\n      fontSize: \"6.875rem\",\n      letterSpacing: \"-0.1375rem\",\n      transformOrigin: \"top left\",\n      ...vars,\n    },\n    position\n  );\n\n  if (subtitle) {\n    const subtitleText = subtitle.querySelector(\"span\");\n    tl.to(\n      subtitleText,\n      {\n        ease,\n        duration,\n        fontSize: \"1.5rem\",\n        letterSpacing: \"-0.015rem\",\n        transformOrigin: \"top left\",\n        ...vars,\n      },\n      position\n    );\n  }\n\n  const cloneHeroTitle = scope.querySelector(\".ProjectHeroTitle\");\n  if (cloneHeroTitle) {\n    const titleState = Flip.getState(title);\n    cloneHeroTitle.appendChild(title);\n    Flip.from(titleState, { duration, ease, ...vars });\n  } else {\n    console.warn(\"NO CLONE TITLE DETECTED IN SCOPE\");\n  }\n\n  if (subtitle) {\n    const cloneHeroSubtitle = scope.querySelector(`.ProjectHeroSubtitle`);\n    if (cloneHeroSubtitle) {\n      const subtitleState = Flip.getState(subtitle);\n      cloneHeroSubtitle?.appendChild(subtitle);\n      Flip.from(subtitleState, { duration, ease, ...vars });\n    } else {\n      console.warn(\"NO CLONE SUBTITLE DETECTED IN SCOPE\");\n    }\n  }\n};\n\nexport const setupBannerAnimation = (scope: Element) => {\n  const tableLines = scope.querySelectorAll(\".hero-table-line\");\n  const tableItems = scope.querySelectorAll(\".hero-table-row__item\");\n  gsap.set(tableLines, { scaleX: 0 });\n  gsap.set(tableItems, { y: \"200%\" });\n};\n\nexport function ProjectPrefetchLink({ slug }: { slug: string | KeyTextField }) {\n  return (\n    <div className={\"absolute left-0 top-0 opacity-0\"}>\n      <Link prefetch=\"viewport\" to={`/work/${slug}`}>\n        Prefetch link\n      </Link>\n    </div>\n  );\n}\n\nexport function ProjectHeroVideo({\n  animate = true,\n  field,\n  poster,\n  className,\n}: {\n  animate?: boolean;\n  field: FilledLinkToWebField;\n  poster: ImageField;\n  className?: string;\n}) {\n  const ref = useRef<HTMLDivElement>(null);\n  const [, setLocked] = useLockedBody(true);\n\n  useLayoutEffect(() => {\n    const ctx = gsap.context(() => {\n      const tl = gsap.timeline({\n        autoRemoveChildren: true,\n        onComplete: () => {\n          setLocked(false);\n        },\n      });\n\n      tl.to(ref.current, {\n        y: 0,\n        duration: 1,\n        autoAlpha: 1,\n        ease: easings.mask,\n      });\n    });\n\n    return () => ctx.revert();\n  }, []);\n\n  return (\n    <div\n      ref={ref}\n      className={clsx(\n        animate ? \"translate-y-1/2 opacity-0\" : \"\",\n        \"col-span-4 mb-10 aspect-video md:col-span-8 md:col-start-3 md:aspect-video\",\n        className\n      )}\n    >\n      <Video autoPlay src={field.url} poster={poster.url ?? \"\"} />\n    </div>\n  );\n}\n\nexport interface ProjectHeroProps extends DivProps {\n  absolute?: boolean;\n  animateTitles?: boolean;\n  animateVideo?: boolean;\n  children?: ReactNode;\n  cta?: Function;\n  debug?: boolean;\n  focusable?: boolean;\n  image?: ImageField;\n  isClone?: boolean;\n  subTitleField?: RichTextField;\n  tableData?: ProjectHeroTableProps;\n  titleField?: RichTextField;\n  video?: {\n    poster: ImageField;\n    field: FilledLinkToWebField;\n  };\n}\n\nfunction ProjectHero({\n  animateVideo = false,\n  absolute = false,\n  animateTitles = false,\n  children,\n  className,\n  cta,\n  debug = false,\n  focusable = false,\n  image,\n  isClone = false,\n  subTitleField,\n  tableData,\n  titleField,\n  video,\n  ...props\n}: ProjectHeroProps) {\n  const container = useRef<HTMLDivElement>(null);\n  const extraProps = isClone ? { tabIndex: -1, \"aria-hidden\": true } : {};\n  const baseClassNames = isClone ? \"pointer-events-none\" : \"\";\n  const debugClassNames = debug ? \"border inner border-white\" : \"\";\n\n  const positionClassNames = absolute\n    ? \"absolute min-h-screen w-full left-0 top-0\"\n    : \"relative\";\n\n  useLayoutEffect(() => {\n    if (isClone && container.current) {\n      setupBannerAnimation(container.current);\n    }\n  }, [isClone]);\n\n  return (\n    <div\n      {...props}\n      {...extraProps}\n      ref={container}\n      className={clsx(\n        \"ProjectHero\",\n        className,\n        baseClassNames,\n        positionClassNames,\n        debugClassNames\n      )}\n    >\n      {image ? <ProjectBackground isClone={isClone} field={image} /> : null}\n\n      <div\n        className={clsx(\n          \"grid-container relative pt-header md:pt-headerDesk\",\n          debugClassNames\n        )}\n      >\n        {debug ? (\n          <div className=\"absolute left-0 top-0 bg-black text-white\">\n            ProjectHero\n          </div>\n        ) : null}\n        <ProjectHeroTitle\n          animateTitles={animateTitles}\n          className={debugClassNames}\n          aria-hidden={isClone}\n          tabIndex={isClone ? -1 : 0}\n          field={titleField}\n        />\n        <ProjectHeroSubtitle\n          animateTitles={animateTitles}\n          className={debugClassNames}\n          aria-hidden={isClone}\n          tabIndex={isClone ? -1 : 0}\n          field={subTitleField}\n        />\n        <div className={\"relative col-span-4 mb-3 md:col-span-12\"}>\n          <ProjectHeroLine />\n        </div>\n        <ProjectHeroCTA\n          tabIndex={isClone ? -1 : 0}\n          className={debugClassNames}\n          field={\"SEE PROJECT DETAILS\"}\n          onClick={() => {\n            if (cta) cta();\n          }}\n        />\n\n        {tableData ? (\n          <ProjectHeroTable isClone={isClone} data={tableData} />\n        ) : null}\n\n        {video && !isClone ? (\n          <ProjectHeroVideo\n            animate={animateVideo}\n            className={debugClassNames}\n            {...video}\n          />\n        ) : (\n          <div\n            className={clsx(\n              \"col-span-4 mb-10 aspect-video md:col-span-8 md:col-start-3\",\n              debugClassNames\n            )}\n          ></div>\n        )}\n      </div>\n      {/*<div className=\"grid-container\">\n          <div className=\"col-span-4 flex w-full justify-between md:hidden\">\n            <span className={\"label--2 text-white\"}>CREDIT</span>\n            <span className={\"label--2 text-white\"}>PHOTOGRAPHY:</span>\n            <span className={\"label--2 text-white\"}>JORDAN NELSON</span>\n          </div>\n        </div>*/}\n    </div>\n  );\n}\n\nexport default ProjectHero;\n", "import { forwardRef } from \"react\";\nimport { PrismicImage } from \"@prismicio/react\";\nimport type { ForwardedRef } from \"react\";\nimport type { PrismicImageProps } from \"@prismicio/react\";\n\nexport const Image = forwardRef(\n  (\n    { field, ...props }: PrismicImageProps,\n    ref: ForwardedRef<HTMLImageElement>\n  ) => {\n    return (\n      <PrismicImage\n        // @ts-ignore\n        ref={ref}\n        fallbackAlt={\"\"}\n        widths={[800, 1000, 1600, 1920, 2400]}\n        imgixParams={{ auto: [\"format\"] }}\n        field={field}\n        {...props}\n      />\n    );\n  }\n);\n\nImage.displayName = \"Image\";\n", "import TextCloneButton from \"~/components/CTA/TextCloneButton\";\nimport useTextAnimation from \"~/components/CTA/useTextAnimation\";\nimport type { DivProps } from \"react-html-props\";\n\nfunction TextCta({ children, ...props }: Omit<DivProps, \"ref\">) {\n  const { ref } = useTextAnimation<HTMLDivElement>();\n\n  return (\n    <TextCloneButton ref={ref} {...props}>\n      {children}\n    </TextCloneButton>\n  );\n}\n\nexport default TextCta;\n", "import type { VideoProps } from \"react-html-props\";\nimport { forwardRef } from \"react\";\n\ninterface Props extends VideoProps {\n  lazy?: boolean;\n  playable?: boolean;\n}\n\nconst Video = forwardRef<HTMLVideoElement, Props>(\n  (\n    {\n      lazy = true,\n      autoPlay,\n      className,\n      playable = false,\n      poster,\n      src,\n      ...props\n    },\n    ref\n  ) => {\n    const extraProps: VideoProps = autoPlay\n      ? { autoPlay: true, muted: true, loop: true, playsInline: true }\n      : {};\n\n    if (lazy)\n      return (\n        <video\n          ref={ref}\n          poster={poster}\n          className={className}\n          {...extraProps}\n          {...props}\n        >\n          <source data-src={src} type=\"video/mp4\" />\n        </video>\n      );\n\n    return (\n      <video\n        ref={ref}\n        src={src}\n        poster={poster}\n        className={className}\n        {...extraProps}\n        {...props}\n      />\n    );\n  }\n);\n\nexport default Video;\n", "import { ProjectHeroLine } from \"~/components/ProjectHero/ProjectHero\";\nimport type { ReactNode } from \"react\";\nimport type { ProjectPageDocument } from \"types.generated\";\n\nexport interface ProjectHeroTableProps {\n  roles: ProjectPageDocument[\"data\"][\"roles\"];\n  links: ProjectPageDocument[\"data\"][\"links\"];\n}\n\nfunction ProjectHeroItem({ children }: { children: ReactNode }) {\n  return (\n    <span className={\"body--3 hero-table-row__item block text-white\"}>\n      {children}\n    </span>\n  );\n}\n\nexport default function ProjectHeroTable({\n  data,\n  isClone = false,\n}: {\n  isClone?: boolean;\n  data: ProjectHeroTableProps;\n}) {\n  if (!data || !data.links) return null;\n\n  return (\n    <div className=\"hero-table relative col-span-4 mb-10 md:col-span-5 md:col-start-8 md:mb-40 md:border-t-0\">\n      <div className={\"pb-8\"}>\n        <div className={\"flex w-full overflow-hidden\"}>\n          <div className={\"w-1/2 md:w-2/3\"}>\n            <div className={\"relative overflow-hidden\"}>\n              <ProjectHeroItem>Role</ProjectHeroItem>\n            </div>\n          </div>\n\n          {data.links.length > 0 ? (\n            <div className={\"w-1/2 md:w-1/3\"}>\n              <div className={\"relative overflow-hidden\"}>\n                <ProjectHeroItem>Links</ProjectHeroItem>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </div>\n\n      {data.roles.map((item, index) => {\n        return (\n          <div\n            key={`WorkHero-Roles-${index}`}\n            className={\"relative flex overflow-hidden py-2.5\"}\n          >\n            {index === 0 ? (\n              <ProjectHeroLine className={\"mobile-only\"} top={true} />\n            ) : null}\n            <div className={\"flex w-full\"}>\n              {/* Roles list */}\n              <div className={\"w-1/2 md:w-2/3\"}>\n                <div className={\"relative overflow-hidden\"}>\n                  <ProjectHeroItem>{item.role_item}</ProjectHeroItem>\n                </div>\n              </div>\n\n              {/* Links list */}\n              <div className={\"w-1/2 md:w-1/3\"}>\n                {data.links[index] ? (\n                  <a\n                    rel=\"noreferrer\"\n                    target={\"_blank\"}\n                    className={\"body--3 relative inline-block w-max\"}\n                    tabIndex={isClone ? -1 : 0}\n                    // @ts-ignore\n                    href={data.links[index]?.link_item?.url}\n                  >\n                    <ProjectHeroItem>\n                      {data.links[index]?.label}\n                    </ProjectHeroItem>\n                  </a>\n                ) : null}\n              </div>\n            </div>\n            <ProjectHeroLine />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n", "import ProjectHero from \"./ProjectHero\";\n\nexport * from \"./ProjectHero\";\nexport default ProjectHero;\n", "import Layout from \"./Layout\";\n\nexport default Layout;\n", "import clsx from \"clsx\";\nimport { json } from \"@remix-run/node\";\nimport { useLayoutEffect } from \"react\";\nimport { useLoaderData, useLocation } from \"@remix-run/react\";\nimport { useLockedBody, useToggle } from \"usehooks-ts\";\nimport { createClient } from \"~/lib/prismicClient\";\nimport { normalizeProjectDetailsData } from \"~/lib/projectDetails\";\nimport { SecondaryCTA } from \"~/components/CTA\";\nimport WorkProjectSliceZone from \"~/slices/WorkProject/WorkProjectSliceZone\";\nimport WorkProjectDetails from \"~/slices/WorkProject/WorkProjectDetails\";\nimport { lazyLoadVideos } from \"~/hooks/useLazyLoadVideos\";\nimport { useIsScrolledInArea } from \"~/hooks/useIsScrolled\";\nimport ProjectHero from \"~/components/ProjectHero\";\nimport type { MouseEventHandler } from \"react\";\nimport type { LoaderArgs } from \"@remix-run/node\";\nimport type { FilledLinkToWebField } from \"@prismicio/types\";\n\nexport const loader = async ({ params }: LoaderArgs) => {\n  if (!params.project) throw new Response(\"Not Found\", { status: 404 });\n  const client = createClient();\n  const page = await client.getByUID(\"project_page\", params.project, {\n    fetchLinks: [\n      \"project_page.roles\",\n      \"project_page.links\",\n      \"project_page.capabilities\",\n    ],\n  });\n\n  if (!page || !page.data) {\n    throw new Response(null, {\n      status: 404,\n      statusText: \"Not Found\",\n    });\n  }\n\n  const details = {\n    credits: page.data.credits,\n    tables: normalizeProjectDetailsData(page.data.body2),\n  };\n\n  return json({\n    hero: page.data,\n    slices: page.data.body,\n    details,\n    page,\n  });\n};\n\nfunction WorkProjectDetailsButton({\n  onClick,\n}: {\n  onClick: MouseEventHandler<HTMLButtonElement>;\n}) {\n  const isInArea = useIsScrolledInArea(500, 100);\n\n  return (\n    <div\n      id={\"WorkProjectDetailsButton\"}\n      className={clsx(\n        isInArea ? \"opacity-100\" : \"opacity-0\",\n        \"fixed bottom-5 flex w-full justify-center transition-opacity md:bottom-5 md:left-8 md:block md:w-auto\"\n      )}\n    >\n      <SecondaryCTA className={\"min-w-[195px]\"} onClick={onClick} border>\n        SEE PROJECT DETAILS\n      </SecondaryCTA>\n    </div>\n  );\n}\n\nfunction WorkProject() {\n  const location = useLocation();\n  const [, setLocked] = useLockedBody(true);\n  const [showDetails, toggleShowDetails] = useToggle();\n  const { hero } = useLoaderData<typeof loader>();\n\n  /*useLayoutEffect(() => {\n    const videos = document.querySelectorAll(\"video\");\n    lazyLoadVideos(videos);\n  }, [location.pathname]);*/\n\n  const toggleModalOpen = () => {\n    setLocked(showDetails);\n    toggleShowDetails();\n  };\n\n  return (\n    <div id={\"WorkProjectPage\"}>\n      <ProjectHero\n        animateVideo={true}\n        key={`work-hero-${location.pathname}`}\n        cta={toggleModalOpen}\n        image={hero.background_image}\n        subTitleField={hero.capabilities}\n        tableData={hero}\n        titleField={hero.title}\n        video={{\n          poster: hero.reel_cover,\n          field: hero.reel as FilledLinkToWebField,\n        }}\n      />\n      <WorkProjectSliceZone key={`work-slices-${location.pathname}`} />\n      <WorkProjectDetails\n        isOpen={showDetails}\n        toggle={toggleShowDetails}\n        key={`work-details-${location.pathname}`}\n      />\n      <WorkProjectDetailsButton\n        onClick={toggleModalOpen}\n        key={`work-details-button-${location.pathname}`}\n      />\n    </div>\n  );\n}\n\nexport default WorkProject;\n", "import type {\n  ProjectPageDocumentDataBody2TableSlice,\n  ProjectPageDocumentDataBody2TableSliceItem,\n} from \"types.generated\";\n\nexport function getKey(prefix: string, ...keys: Array<string | number>) {\n  return `${prefix}-${keys.join(\"-\")}`;\n}\n\nexport const createTableColumns = (\n  items: ProjectPageDocumentDataBody2TableSliceItem[]\n) => {\n  let columns: ProjectPageDocumentDataBody2TableSliceItem[][] = [];\n  let columnItem: ProjectPageDocumentDataBody2TableSliceItem[] = [];\n\n  items.forEach((item) => {\n    if (item.isheader) {\n      columnItem = [];\n      columnItem.push(item);\n      columns.push(columnItem);\n    } else {\n      columnItem.push(item);\n    }\n  });\n\n  return columns;\n};\n\nexport const createTableRows = (\n  items: ProjectPageDocumentDataBody2TableSliceItem[]\n) => {\n  const columns = createTableColumns(items);\n  const headers = items.filter((a) => a.isheader);\n  const longestCol = columns.reduce((a, b) => (a.length > b.length ? a : b));\n\n  const rowsLength = longestCol.length;\n  const colsLength = headers.length;\n  let rows = Array.from(Array(rowsLength), () => new Array(colsLength));\n  for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n    const row = rows[rowIndex];\n    for (let cellIndex = 0; cellIndex < row.length; cellIndex++) {\n      rows[rowIndex][cellIndex] = columns[cellIndex][rowIndex];\n    }\n  }\n  return rows;\n};\n\nexport const normalizeProjectDetailsData = (\n  body: ProjectPageDocumentDataBody2TableSlice[]\n) => {\n  return body.map((bodyItem) => {\n    return {\n      title: bodyItem.primary.title1,\n      description: bodyItem.primary.description,\n      columns: createTableColumns(bodyItem.items),\n      rows: createTableRows(bodyItem.items),\n    };\n  });\n};\n", "import React from \"react\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport WorkProjectFullWidth from \"~/slices/WorkProject/WorkProjectFullWidth\";\nimport WorkProject2Column from \"~/slices/WorkProject/WorkProject2Column\";\nimport WorkProjectVideoColor from \"~/slices/WorkProject/WorkProjectVideoColor\";\nimport WorkProjectVideoPhoto from \"~/slices/WorkProject/WorkProjectVideoPhoto\";\nimport WorkProjectPictureColor from \"~/slices/WorkProject/WorkProjectPictureColor\";\nimport WorkProjectNextProject from \"~/slices/WorkProject/WorkProjectNextProject\";\nimport type { loader } from \"~/routes/work.$project\";\n\nfunction WorkProjectSliceZone() {\n  const { slices } = useLoaderData<typeof loader>();\n  return (\n    <>\n      {slices.map((item, index) => {\n        const lazy = true;\n\n        switch (item.slice_type) {\n          case \"project_full_width\":\n            return (\n              <WorkProjectFullWidth\n                item={item}\n                lazy={lazy}\n                key={`WorkProjectSlice-${index}`}\n              />\n            );\n          case \"project_2_column\":\n            return (\n              <WorkProject2Column\n                lazy={lazy}\n                item={item}\n                key={`WorkProjectSlice-${index}`}\n              />\n            );\n          case \"project_plate_-_videocolor\":\n            return (\n              <WorkProjectVideoColor\n                item={item}\n                lazy={lazy}\n                key={`WorkProjectSlice-${index}`}\n              />\n            );\n          case \"project_plate_-_videophoto\":\n            return (\n              <WorkProjectVideoPhoto\n                lazy={lazy}\n                item={item}\n                key={`WorkProjectSlice-${index}`}\n              />\n            );\n          case \"projectplate_-_picturecolor\":\n            return (\n              <WorkProjectPictureColor\n                lazy={lazy}\n                item={item}\n                key={`WorkProjectSlice-${index}`}\n              />\n            );\n          case \"project_next_banner\":\n            return (\n              <WorkProjectNextProject\n                lazy={lazy}\n                item={item}\n                key={`WorkProjectSlice-${index}`}\n              />\n            );\n          default:\n            return <span>Unknown Slice Type {item.slice_type}</span>;\n        }\n      })}\n    </>\n  );\n}\n\nexport default WorkProjectSliceZone;\n", "import React from \"react\";\nimport { Image } from \"~/components/Image\";\nimport { Video } from \"~/components/Video\";\nimport type { ProjectPageDocumentDataBodyProjectFullWidthSlice } from \"types.generated\";\n\ninterface Props {\n  lazy: boolean;\n  item: ProjectPageDocumentDataBodyProjectFullWidthSlice;\n}\n\nfunction WorkProjectFullWidth({ item, lazy }: Props) {\n  if (\"url\" in item.primary.video && item.primary.video.url) {\n    return (\n      <section className={\"aspect-video select-none bg-red\"}>\n        <Video\n          autoPlay\n          lazy={lazy}\n          src={item.primary.video.url}\n          poster={item.primary.background.url || \"\"}\n        />\n      </section>\n    );\n  }\n\n  return (\n    <section>\n      <Image\n        loading={lazy ? \"eager\" : \"lazy\"}\n        field={item.primary.background}\n        className={\"w-full select-none object-cover\"}\n      />\n    </section>\n  );\n}\n\nexport default WorkProjectFullWidth;\n", "import React from \"react\";\nimport { Image } from \"~/components/Image\";\nimport { Video } from \"~/components/Video\";\nimport type { ProjectPageDocumentDataBodyProject2ColumnSlice } from \"types.generated\";\n\ninterface Props {\n  lazy: boolean;\n  item: ProjectPageDocumentDataBodyProject2ColumnSlice;\n}\n\nfunction WorkProject2Column({ item, lazy }: Props) {\n  // @ts-ignore\n  const leftIsVideo = !!item.primary.left_video.url;\n  // @ts-ignore\n  const rightIsVideo = !!item.primary.right_video.url;\n\n  return (\n    <div className={\"md:flex\"}>\n      {/* RIGHT MEDIA */}\n      {leftIsVideo ? (\n        <div className={\"w-full bg-pure-black md:w-1/2\"}>\n          <Video\n            autoPlay\n            lazy={lazy}\n            className={\"h-full w-full object-cover\"}\n            // @ts-ignore\n            src={item.primary.left_video.url}\n          />\n        </div>\n      ) : (\n        <Image\n          loading={lazy ? \"eager\" : \"lazy\"}\n          className={\"w-full select-none md:w-1/2\"}\n          field={item.primary.left_image}\n        />\n      )}\n\n      {/* RIGHT MEDIA */}\n      {rightIsVideo ? (\n        <div className={\"w-full bg-pure-black md:w-1/2\"}>\n          <Video\n            autoPlay\n            lazy={lazy}\n            className={\"h-full w-full object-cover\"}\n            // @ts-ignore\n            src={item.primary.right_video.url}\n          />\n        </div>\n      ) : (\n        <Image\n          loading={lazy ? \"eager\" : \"lazy\"}\n          className={\"w-full select-none md:w-1/2\"}\n          field={item.primary.right_image}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default WorkProject2Column;\n", "import React from \"react\";\nimport clsx from \"clsx\";\nimport { Video } from \"~/components/Video\";\nimport type { ProjectPageDocumentDataBodyProjectPlateVideocolorSlice } from \"types.generated\";\n\ninterface Props {\n  lazy: boolean;\n  item: ProjectPageDocumentDataBodyProjectPlateVideocolorSlice;\n}\n\nfunction WorkProjectVideoColor({ lazy, item }: Props) {\n  const containerClassNames = item.primary.square\n    ? \"md:min-h-screen\"\n    : \"md:aspect-video\";\n\n  const contentClassNames = item.primary.square\n    ? \"md:col-span-6 md:col-start-4\"\n    : \"md:col-span-8 md:col-start-3 md:aspect-video bg-black\";\n\n  return (\n    <div\n      className={clsx(\"md:grid-container items-center\", containerClassNames)}\n      style={{\n        backgroundColor: item.primary.background_color || \"#fff000\",\n      }}\n    >\n      <div className={contentClassNames}>\n        <Video\n          autoPlay\n          lazy={lazy}\n          poster={item.primary.cover.url || \"\"}\n          // @ts-ignore\n          src={item.primary.video.url}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default WorkProjectVideoColor;\n", "import React from \"react\";\nimport clsx from \"clsx\";\nimport { Video } from \"~/components/Video\";\nimport { Image } from \"~/components/Image\";\nimport type { ProjectPageDocumentDataBodyProjectPlateVideophotoSlice } from \"types.generated\";\n\ninterface Props {\n  lazy: boolean;\n  item: ProjectPageDocumentDataBodyProjectPlateVideophotoSlice;\n}\n\nfunction WorkProjectVideoPhoto({ item, lazy }: Props) {\n  return (\n    <section className={\"WorkProjectSlice relative\"}>\n      <Image\n        field={item.primary.image}\n        loading={lazy ? \"eager\" : \"lazy\"}\n        className={\"desktop-only w-full\"}\n      />\n      <div\n        className={clsx(\n          \"md:absolute md:left-0 md:top-0 md:flex md:h-full md:w-full md:items-center md:justify-center\"\n        )}\n      >\n        <div\n          className={\n            item.primary.square\n              ? \"md:aspect-square md:max-w-[50%]\"\n              : \"md:aspect-video md:max-w-[80%]\"\n          }\n        >\n          <Video\n            autoPlay\n            lazy={lazy}\n            // @ts-ignore\n            src={item.primary.video.url}\n          />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default WorkProjectVideoPhoto;\n", "import React from \"react\";\nimport type { ProjectPageDocumentDataBodyProjectplatePicturecolorSlice } from \"types.generated\";\nimport { Image } from \"~/components/Image\";\n\ninterface Props {\n  lazy: boolean;\n  item: ProjectPageDocumentDataBodyProjectplatePicturecolorSlice;\n}\n\nfunction WorkProjectPictureColor({ item, lazy }: Props) {\n  return (\n    <div className={\"md:grid-container\"}>\n      <div\n        className={\n          \"flex items-center md:col-span-8 md:col-start-3 md:min-h-screen\"\n        }\n        style={{\n          backgroundColor: item.primary.background_color || \"white\",\n        }}\n      >\n        <Image\n          loading={lazy ? \"eager\" : \"lazy\"}\n          field={item.primary.image}\n          className={\"w-full select-none\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default WorkProjectPictureColor;\n", "import easings from \"~/lib/easings\";\nimport { gsap } from \"gsap\";\nimport { useRef } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { useLayoutEffect } from \"~/hooks\";\nimport {\n  animateBanner,\n  ProjectPrefetchLink,\n  setupBannerAnimation,\n} from \"~/components/ProjectHero\";\nimport { Image } from \"~/components/Image\";\nimport ProjectHero from \"~/components/ProjectHero/ProjectHero\";\nimport type { MouseEvent } from \"react\";\nimport type { ProjectPageDocumentDataBodyProjectNextBannerSlice } from \"types.generated\";\nimport type { KeyTextField } from \"@prismicio/types\";\n\ninterface Props {\n  lazy: boolean;\n  item: ProjectPageDocumentDataBodyProjectNextBannerSlice;\n}\n\nfunction WorkProjectNextContent({ title }: { title: KeyTextField }) {\n  return (\n    <div\n      className={\n        \"pointer-events-none absolute left-0 top-0 flex h-full w-full flex-col justify-center pl-4 pt-5 md:p-8\"\n      }\n    >\n      <div className={\"relative h-[10rem]\"}>\n        <h3\n          className={\n            \"heading--3 WorkProjectNextContentInfo absolute top-0 mb-5 w-full text-left text-white\"\n          }\n        >\n          NEXT PROJECT\n        </h3>\n        <h1\n          className={\n            \"WorkProjectNextContentTitle display--1 absolute bottom-0 text-left text-white\"\n          }\n        >\n          <span>{title}</span>\n        </h1>\n      </div>\n    </div>\n  );\n}\n\nfunction WorkProjectNextProject({ item, lazy }: Props) {\n  const navigate = useNavigate();\n  const container = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    if (container.current) setupBannerAnimation(container.current);\n  }, []);\n\n  const onClick = (e: MouseEvent<HTMLDivElement>, slug: string) => {\n    const duration = 1;\n    const ease = easings.mask;\n\n    if (e.target instanceof Element) {\n      const tl = gsap.timeline({\n        onComplete: () => {\n          navigate(`/work/${slug}`);\n        },\n      });\n\n      const background = e.target.querySelector(\".background>img\");\n      tl.to(\n        background,\n        {\n          ease,\n          duration: duration - 0.3,\n          y: background ? background?.scrollHeight - window.innerHeight : 0,\n        },\n        0\n      );\n\n      const other = e.target.querySelectorAll(\".WorkProjectNextContentInfo\");\n      tl.to(\n        other,\n        {\n          autoAlpha: 0,\n          duration: 0.5,\n          ease,\n        },\n        0\n      );\n\n      const title = e.target.querySelector(\".WorkProjectNextContentTitle\");\n      if (title) {\n        animateBanner(\n          tl,\n          {\n            ease,\n            duration,\n            position: 0.5,\n          },\n          {\n            title,\n            scope: e.target,\n          }\n        );\n      }\n    }\n  };\n\n  return (\n    <div\n      ref={container}\n      role={\"button\"}\n      id={\"WorkProjectNextProject\"}\n      onClick={(e) => onClick(e, item.primary.slug as string)}\n      className={\n        \"relative aspect-square w-full cursor-pointer overflow-hidden md:aspect-auto md:h-screen\"\n      }\n    >\n      <div\n        className={\n          \"background pointer-events-none absolute flex h-full w-full items-end\"\n        }\n      >\n        <Image\n          loading={lazy ? \"eager\" : \"lazy\"}\n          className={\"w-full object-cover\"}\n          field={item.primary.background_image1}\n        />\n      </div>\n      <ProjectHero\n        isClone={true}\n        animateTitles={true}\n        //@ts-ignore\n        subTitleField={item.primary.next_project_data.data.capabilities}\n        //@ts-ignore\n        tableData={item.primary.next_project_data.data}\n      />\n      <WorkProjectNextContent title={item.primary.title1} />\n      <ProjectPrefetchLink slug={item.primary.slug} />\n    </div>\n  );\n}\n\nexport default WorkProjectNextProject;\n", "import { asText } from \"@prismicio/richtext\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { ProjectHeroTitle } from \"~/components/ProjectHero/ProjectHero\";\nimport WorkProjectDetailsModal from \"~/slices/WorkProject/WorkProjectDetailsModal\";\nimport WorkProjectDetailsModalTableInfo from \"~/slices/WorkProject/WorkProjectDetailsModalTableInfo\";\nimport WorkProjectDetailsModalTableFull from \"~/slices/WorkProject/WorkProjectDetailsModalTableFull\";\nimport type { loader } from \"~/routes/work.$project\";\nimport type { KeyTextField } from \"@prismicio/types\";\nimport type { ProjectPageDocumentDataBody2TableSliceItem } from \"types.generated\";\n\nexport function TableTitle({ text }: { text: string | KeyTextField }) {\n  return (\n    <div className={\"mb-8 pt-3.5\"}>\n      <h3 className={\"label--2\"}>{text}</h3>\n    </div>\n  );\n}\n\nexport function TableCell({\n  item,\n}: {\n  item: ProjectPageDocumentDataBody2TableSliceItem;\n}) {\n  return (\n    <div className={\"body--3 py-2\"}>\n      {item?.link && \"url\" in item.link && item.link.url ? (\n        <a\n          rel=\"noreferrer\"\n          target={\"_blank\"}\n          // @ts-ignore\n          href={item.link.url}\n        >\n          {item.label}\n        </a>\n      ) : (\n        <span>{item ? item.label : null}</span>\n      )}\n    </div>\n  );\n}\n\nfunction WorkProjectDetailsTables() {\n  const { details } = useLoaderData<typeof loader>();\n\n  return (\n    <>\n      {details.tables.map(({ title, description, rows, columns }, index) => {\n        const isFull = !asText(title);\n        return (\n          <>\n            {isFull ? (\n              <WorkProjectDetailsModalTableFull\n                rows={rows}\n                columns={columns}\n                key={`TableFull-${index}`}\n              />\n            ) : (\n              <WorkProjectDetailsModalTableInfo\n                rows={rows}\n                title={title}\n                description={description}\n                key={`TableWithInfo-${index}`}\n              />\n            )}\n          </>\n        );\n      })}\n    </>\n  );\n}\n\nfunction WorkProjectDetails({\n  isOpen,\n  toggle,\n}: {\n  isOpen: boolean;\n  toggle: Function;\n}) {\n  const { hero } = useLoaderData<typeof loader>();\n  return (\n    <WorkProjectDetailsModal onClose={toggle} isOpen={isOpen}>\n      <div\n        data-lenis-prevent={true}\n        className={\"fixed inset-0 h-full w-full overflow-scroll\"}\n      >\n        <div className=\"grid-container relative pt-header md:pt-headerDesk\">\n          <ProjectHeroTitle className={\"text-black\"} field={hero.title} />\n        </div>\n        <div className=\"grid-container\">\n          <div className=\"col-span-4 mb-10 md:col-span-12 md:mb-16\">\n            <h3 className={\"heading--3\"}>{asText(hero.capabilities)}</h3>\n          </div>\n        </div>\n\n        <div className={\"modal-tables mb-[100px] pb-32\"}>\n          <WorkProjectDetailsTables />\n        </div>\n\n        <div className={\"mb-20 md:mb-10\"}>\n          {hero.credits.length > 0\n            ? hero.credits.map((item, index) => {\n                if (item.value)\n                  return (\n                    <div\n                      key={`Table-credits-${index}`}\n                      className=\"grid-container\"\n                    >\n                      <div className={\"label--2 md:col-span-2 md:col-start-8\"}>\n                        {item.type}\n                      </div>\n                      <div\n                        className={\n                          \"label--2 col-span-2 col-start-3 text-right md:col-start-11 md:text-left\"\n                        }\n                      >\n                        {item.value}\n                      </div>\n                    </div>\n                  );\n                return null;\n              })\n            : null}\n        </div>\n      </div>\n    </WorkProjectDetailsModal>\n  );\n}\n\nexport default WorkProjectDetails;\n", "import { Fragment } from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport type { ReactNode } from \"react\";\nimport { SecondaryCTA } from \"~/components/CTA\";\n\ninterface Props {\n  isOpen: boolean;\n  onClose: Function;\n  children: ReactNode;\n}\n\nfunction WorkProjectDetailsModal({ isOpen, onClose, children }: Props) {\n  return (\n    <Transition show={isOpen} as={Fragment}>\n      <Dialog onClose={() => onClose()} className={\"relative\"}>\n        {/*Backdrop*/}\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-500\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-out duration-500\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className={\"fixed inset-0 h-full w-full bg-white\"} />\n        </Transition.Child>\n\n        {/*Content*/}\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-500\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-out duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <Dialog.Panel>\n            {children}\n            <CloseButton onClick={onClose} />\n          </Dialog.Panel>\n        </Transition.Child>\n      </Dialog>\n    </Transition>\n  );\n}\n\nexport function CloseButton({ onClick }: { onClick: Function }) {\n  return (\n    <div\n      className={\n        \"fixed bottom-5 flex w-full justify-center transition-opacity md:bottom-0 md:left-0 md:block md:w-auto md:pb-5 md:pl-8\"\n      }\n    >\n      <SecondaryCTA className={\"min-w-[195px]\"} dark onClick={() => onClick()}>\n        CLOSE\n      </SecondaryCTA>\n    </div>\n  );\n}\n\nexport default WorkProjectDetailsModal;\n", "import { asText } from \"@prismicio/richtext\";\nimport type { RichTextField } from \"@prismicio/types\";\nimport type { ProjectPageDocumentDataBody2TableSliceItem } from \"types.generated\";\nimport { getKey } from \"~/lib/projectDetails\";\nimport { TableCell, TableTitle } from \"~/slices/WorkProject/WorkProjectDetails\";\nimport { PrismicRichText } from \"@prismicio/react\";\n\nfunction TableInfo({\n  title,\n  description,\n}: {\n  title: string;\n  description: RichTextField;\n}) {\n  if (!title || !description) return null;\n\n  return (\n    <div className={\"col-span-4 mb-8 md:col-span-5 md:mb-0\"}>\n      <TableTitle text={title} />\n      <PrismicRichText\n        field={description}\n        components={{\n          paragraph: ({ children }) => <p className={\"body--3\"}>{children}</p>,\n        }}\n      />\n    </div>\n  );\n}\n\nfunction WorkProjectDetailsModalTableInfo({\n  title,\n  description,\n  rows,\n}: {\n  title: RichTextField;\n  description: RichTextField;\n  rows: ProjectPageDocumentDataBody2TableSliceItem[][];\n}) {\n  const keyPre = \"TableWithInfo\";\n  const detailsTitle = asText(title);\n\n  return (\n    <div className={\"grid-container mb-20 md:mb-28\"}>\n      <div className=\"col-span-4 border-t border-t-black/30 md:col-span-12 md:mb-3.5\" />\n      <TableInfo title={detailsTitle} description={description} />\n\n      <div className={\"col-span-4 md:col-span-5 md:col-start-8\"}>\n        {rows.map((row, rowIndex) => {\n          const rowKey = getKey(keyPre, \"row\", detailsTitle, rowIndex);\n\n          return (\n            <div key={rowKey} className={\"flex border-b border-b-black/30\"}>\n              {row.map((rowItem, rowItemIndex) => {\n                const rowItemKey = getKey(\n                  keyPre,\n                  \"rowItem\",\n                  detailsTitle,\n                  rowItemIndex\n                );\n\n                return rowItem?.isheader ? (\n                  <div key={rowItemKey} className={\"w-1/2\"}>\n                    <TableTitle text={rowItem.label} />\n                  </div>\n                ) : (\n                  <div key={rowItemKey} className={\"w-1/2\"}>\n                    <TableCell item={rowItem} />\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default WorkProjectDetailsModalTableInfo;\n", "import clsx from \"clsx\";\nimport { getKey } from \"~/lib/projectDetails\";\nimport { TableCell, TableTitle } from \"~/slices/WorkProject/WorkProjectDetails\";\nimport type { ProjectPageDocumentDataBody2TableSliceItem } from \"types.generated\";\n\nfunction WorkProjectDetailsModalTableFull({\n  rows,\n  columns,\n}: {\n  columns: ProjectPageDocumentDataBody2TableSliceItem[][];\n  rows: ProjectPageDocumentDataBody2TableSliceItem[][];\n}) {\n  const keyPre = \"TableFull\";\n  const keyPreMobile = \"TableFullMobile\";\n\n  return (\n    <div>\n      <div className={\"desktop-only\"}>\n        {rows.map((row, rowIndex) => {\n          let rowChunks = [];\n          for (let i = 0; i < row.length; i += 2) {\n            rowChunks.push(row.slice(i, i + 2));\n          }\n\n          return (\n            <div\n              key={getKey(keyPre, \"row\", rowIndex)}\n              className={\"grid-container border-b border-b-black/30\"}\n            >\n              {rowChunks.map((chunk, chunkIndex) => {\n                return (\n                  <div\n                    key={getKey(keyPre, \"rowChunk\", chunkIndex)}\n                    className={clsx(\n                      \"col-span-4 flex md:col-span-5 md:even:col-start-8\"\n                    )}\n                  >\n                    {chunk.map((chunkItem, chunkItemIndex) => {\n                      const key = getKey(keyPre, \"chunkItem\", chunkItemIndex);\n                      if (chunkItem?.isheader) {\n                        return (\n                          <div key={key} className={\"w-1/2\"}>\n                            <TableTitle text={chunkItem.label} />\n                          </div>\n                        );\n                      } else {\n                        return (\n                          <div key={key} className={\"w-1/2\"}>\n                            <TableCell item={chunkItem} />\n                          </div>\n                        );\n                      }\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n\n      <div className={\"mobile-only\"}>\n        <div\n          className={\n            \"max-container grid grid-cols-4 md:border-b md:border-b-black/30\"\n          }\n        >\n          {columns?.map((colItem, colIndex) => {\n            return (\n              <div\n                className={clsx(\n                  \"relative col-span-2 mb-24 border-b border-b-black/30\"\n                )}\n                key={getKey(keyPreMobile, \"column\", colIndex)}\n              >\n                {colItem.map((cellItem, cellItemIndex) => {\n                  const key = getKey(keyPreMobile, \"cellItem\", cellItemIndex);\n                  return cellItem.isheader ? (\n                    <div\n                      key={key}\n                      className={\n                        colIndex % 2 === 0\n                          ? \"relative after:absolute after:top-0 after:h-[1px] after:w-[200%] after:bg-black/30\" +\n                            \"last:before:absolute last:before:bottom-0 last:before:h-[1px] last:before:w-[200%] last:before:bg-black/30\"\n                          : \"\"\n                      }\n                    >\n                      <TableTitle text={cellItem.label} />\n                    </div>\n                  ) : (\n                    <div\n                      key={key}\n                      className={\n                        colIndex % 2 === 0\n                          ? \"relative after:absolute after:top-0 after:h-[1px] after:w-[200%] after:bg-black/30\"\n                          : \"\"\n                      }\n                    >\n                      <TableCell item={cellItem} />\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WorkProjectDetailsModalTableFull;\n", "import LinkCTA from \"~/components/CTA/LinkCTA\";\nimport { PrimaryCTAButton, PrimaryCTALink } from \"~/components/CTA/PrimaryCTA\";\nimport { SecondaryCTA } from \"~/components/CTA/SecondaryCTA\";\n\nfunction Styleguide() {\n  return (\n    <div className={\"flex min-h-screen\"}>\n      <div\n        className={\"flex w-1/2 flex-col items-center justify-center bg-black\"}\n      >\n        <div className={\"my-2\"}>\n          <PrimaryCTAButton dark>{\"CONTACT\"}</PrimaryCTAButton>\n          <PrimaryCTALink to={\"#\"} dark>\n            {\"CONTACT\"}\n          </PrimaryCTALink>\n        </div>\n        <div className={\"my-2\"}>\n          <PrimaryCTALink to={\"#\"} size={\"lg\"} dark>\n            {\"CONTACT\"}\n          </PrimaryCTALink>\n        </div>\n\n        <div className=\"my-4\">\n          <SecondaryCTA>See Project Details</SecondaryCTA>\n        </div>\n\n        <div className=\"my-4\">\n          <LinkCTA to={\"#\"}>This is a link</LinkCTA>\n        </div>\n      </div>\n      <div\n        className={\"flex w-1/2 flex-col items-center justify-center bg-white\"}\n      >\n        <div className={\"my-2\"}>\n          <PrimaryCTALink to={\"#\"}>{\"CONTACT\"}</PrimaryCTALink>\n        </div>\n        <div className={\"my-2\"}>\n          <PrimaryCTALink to={\"#\"} size={\"lg\"}>\n            {\"CONTACT\"}\n          </PrimaryCTALink>\n        </div>\n\n        <div className=\"my-4\">\n          <SecondaryCTA border>See Project Details</SecondaryCTA>\n        </div>\n\n        <div className=\"my-4\">\n          <LinkCTA dark to={\"#\"}>\n            This is a link\n          </LinkCTA>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Styleguide;\n", "import { defer } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { createClient } from \"~/lib/prismicClient\";\nimport { findAllSlicesByType } from \"~/lib/prismicUtils\";\nimport HomePageHero from \"~/slices/HomePage/HomePageHero\";\nimport HomePagePortfolioDesktop from \"~/slices/HomePage/HomePagePortfolioDesktop\";\nimport HomePagePortfolioMobile from \"~/slices/HomePage/HomePagePortfolioMobile\";\nimport HomePageProjects from \"~/slices/HomePage/HomePageProjects\";\nimport HomePageTable from \"~/slices/HomePage/HomePageTable\";\nimport HomePageReviews from \"~/slices/HomePage/HomePageReviews\";\nimport type { MetaFunction } from \"@remix-run/node\";\nimport HomePageQuote from \"~/slices/HomePage/HomePageQuote\";\nimport Footer from \"~/components/Footer\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: \"Canvas Studio Website V4\" }];\n};\n\nexport const loader = async () => {\n  const client = createClient();\n  const homepage = await client.getSingle(\"homepage\", {\n    fetchLinks: [\"project_page.roles\", \"project_page.links\"],\n  });\n  const homeProjects = findAllSlicesByType(homepage, \"homepage_project\");\n  return defer({\n    homepage,\n    slices: {\n      homeProjects,\n    },\n  });\n};\n\nexport default function HomePage() {\n  const { homepage, slices } = useLoaderData<typeof loader>();\n\n  return (\n    <main>\n      <HomePageHero />\n      <HomePageQuote />\n      <HomePageProjects data={slices.homeProjects} />\n      {homepage.data.body.map((slice) => {\n        switch (slice.slice_type) {\n          case \"table\":\n            return <HomePageTable key={slice.id} data={slice} />;\n          case \"homepage_portfolio_slice\":\n            return <HomePagePortfolioMobile key={slice.id} data={slice} />;\n          case \"homepage_portfolio_desktop\":\n            return <HomePagePortfolioDesktop key={slice.id} data={slice} />;\n          case \"home_reviews\":\n            return <HomePageReviews key={slice.id} data={slice} />;\n          default:\n            return null;\n        }\n      })}\n      <Footer />\n    </main>\n  );\n}\n", "import type {\n  HomepageDocument,\n  HomepageDocumentDataBodyHomepageProjectSlice,\n} from \"types.generated\";\n\nexport const findSliceByType = (\n  { data }: HomepageDocument,\n  sliceType: string\n) => {\n  return data.body.find(({ slice_type }) => slice_type === sliceType);\n};\n\nexport const findAllSlicesByType = (\n  { data }: HomepageDocument,\n  sliceType: string\n) => {\n  const array = data.body.concat().filter(({ slice_type }) => {\n    return slice_type === sliceType;\n  }) as HomepageDocumentDataBodyHomepageProjectSlice[];\n\n  return array.filter((i) => i.primary.enabled);\n};\n", "import Hero from \"~/components/HomeHero/Hero\";\n\nfunction HomePageHero() {\n  return (\n    <section className={\"texture-background h-screen\"}>{/*<Hero />*/}</section>\n  );\n}\n\nexport default HomePageHero;\n", "import clsx from \"clsx\";\nimport { gsap } from \"gsap\";\nimport { useMemo, useRef, useState } from \"react\";\nimport TextCta from \"~/components/CTA/TextCTA\";\nimport { Image } from \"~/components/Image\";\nimport type { MouseEvent } from \"react\";\nimport type { ImageField } from \"@prismicio/types\";\nimport type { DivProps } from \"react-html-props\";\nimport type { HomepageDocumentDataBodyHomepagePortfolioDesktopSlice } from \"types.generated\";\nimport { useLayoutEffect } from \"~/hooks\";\n\nconst ALL_TAGS_ID = \"all\";\n\ninterface ImageProps extends DivProps {\n  active: boolean;\n  image: ImageField;\n}\n\nfunction HomePagePortFolioImage({ active, image, ...props }: ImageProps) {\n  return (\n    <div\n      className={clsx(\n        \"col-span-1 transition-opacity\",\n        active\n          ? \"pointer-events-auto opacity-100\"\n          : \"pointer-events-none opacity-5\"\n      )}\n      {...props}\n    >\n      <Image field={image} className={\"object-contain\"} />\n    </div>\n  );\n}\n\ninterface Props {\n  data: HomepageDocumentDataBodyHomepagePortfolioDesktopSlice;\n}\n\nfunction getCustomPosition(e: MouseEvent<HTMLDivElement>, width: number) {\n  const yOffset = 28;\n  // left\n  if (e.clientX < width / 2) {\n    return [e.clientX, e.clientY + yOffset] as const;\n  }\n  // right\n  if (e.clientX > window.innerWidth - width / 2) {\n    return [e.clientX - width, e.clientY + yOffset] as const;\n  }\n  // center\n  return [e.clientX - width / 2, e.clientY + yOffset] as const;\n}\n\nfunction HomePagePortfolioDesktop({ data }: Props) {\n  const availableTags = useMemo(() => {\n    return [ALL_TAGS_ID, ...(data.primary.available_tags?.split(\", \") || [])];\n  }, [data.primary.available_tags]);\n\n  const imageRef = useRef<HTMLImageElement>(null);\n  const [selectedTag, setSelectedTag] = useState<string>(ALL_TAGS_ID);\n  const [hasMovedMouse, setHasmovedMouse] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [hoveredTag, setHoveredTag] = useState<string | null>(null);\n  const [hoverImage, setHoverImage] = useState<string>(\"\");\n  const cursorRef = useRef<HTMLDivElement>(null);\n\n  const onMouseMove = (e: MouseEvent<HTMLDivElement>) => {\n    if (!hasMovedMouse) {\n      gsap.set(cursorRef.current, {\n        x: e.clientX,\n        y: e.clientY,\n      });\n      setHasmovedMouse(true);\n    }\n    if (imageRef.current) {\n      const [x, y] = getCustomPosition(e, imageRef.current.clientWidth);\n      gsap.to(cursorRef.current, {\n        x,\n        y,\n        delay: 0.01,\n        duration: 0.4,\n        ease: \"power3.out\",\n      });\n    }\n  };\n\n  const onMouseEnterImage = (e: MouseEvent<HTMLImageElement>) => {\n    const img = e.currentTarget.querySelector(\"img\")!;\n    setHoverImage(img.src);\n    setIsHovered(true);\n  };\n\n  const onMouseLeaveImage = (e: MouseEvent<HTMLImageElement>) => {\n    setIsHovered(false);\n  };\n\n  return (\n    <section\n      onMouseMove={onMouseMove}\n      className={\"desktop-only overflow-hidden pb-64 pt-20\"}\n    >\n      <div className={\"max-container pb-16\"}>\n        <div className={\"flex flex-row justify-end text-black/30\"}>\n          {availableTags?.map((tag, index) => {\n            const isActive = selectedTag === tag;\n            return (\n              <div\n                key={`PortfolioDesk-${index}-${tag}`}\n                onMouseEnter={() => setHoveredTag(tag)}\n                onMouseLeave={() => setHoveredTag(null)}\n                onClick={() => {\n                  setSelectedTag(tag);\n                }}\n                className={clsx(\n                  \"heading--2 cursor-pointer hover:text-black\",\n                  isActive ? \"text-black\" : \"text-grey\"\n                )}\n              >\n                {isActive ? <span>(&nbsp;</span> : null}\n                <TextCta className={\"inline-block align-middle\"}>{tag}</TextCta>\n                {isActive ? <span>&nbsp;)</span> : null}\n                {index !== availableTags?.length - 1 ? <>,&nbsp;</> : null}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className={\"relative grid grid-cols-17 gap-2 px-2\"}>\n        {data.items.map((item, index) => {\n          let tags = item.tags?.split(\", \") || [];\n          const active = hoveredTag\n            ? tags.includes(hoveredTag) || hoveredTag === ALL_TAGS_ID\n            : tags.includes(selectedTag) || selectedTag === ALL_TAGS_ID;\n          return (\n            <HomePagePortFolioImage\n              active={active}\n              image={item.image}\n              onMouseEnter={onMouseEnterImage}\n              onMouseLeave={onMouseLeaveImage}\n              key={`PortfolioDesk-Image-${index}}`}\n            />\n          );\n        })}\n      </div>\n\n      <div\n        ref={cursorRef}\n        className={\"pointer-events-none fixed left-0 top-0 z-10\"}\n      >\n        <div\n          className={clsx(\n            \"transition-all duration-100 ease-out\",\n            isHovered && hasMovedMouse\n              ? \"translate-y-0 opacity-100\"\n              : \"translate-y-10 opacity-0\"\n          )}\n        >\n          <img\n            alt={\" \"}\n            ref={imageRef}\n            src={hoverImage}\n            aria-hidden={true}\n            className={\"max-h-[50vh] max-w-[50vh]\"}\n          />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default HomePagePortfolioDesktop;\n", "import { asText } from \"@prismicio/richtext\";\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\nimport { AutoScroll } from \"@splidejs/splide-extension-auto-scroll\";\nimport type { HomepageDocumentDataBodyHomepagePortfolioSliceSlice } from \"types.generated\";\n\ntype Props = {\n  data: HomepageDocumentDataBodyHomepagePortfolioSliceSlice;\n};\n\nexport default function HomePagePortfolioMobile({ data }: Props) {\n  return (\n    <section className={\"w-full bg-white\"}>\n      <div\n        className={\n          \"mobile-only noise-background bg-black pt-[6.5rem] text-white last:pb-8\"\n        }\n      >\n        <div className=\"max-container\">\n          <h2 className={\"heading--2 mb-7 border-t border-t-white/30 pt-2.5\"}>\n            {asText(data.primary.title)}\n          </h2>\n        </div>\n\n        <div className={\"w-full\"}>\n          <Splide\n            extensions={{ AutoScroll }}\n            options={{\n              type: \"loop\",\n              drag: \"free\",\n              perPage: 2,\n              focus: \"center\",\n              fixedWidth: \"15.5rem\",\n              gap: \"0.625rem\",\n              arrows: false,\n              pagination: false,\n              autoScroll: {\n                speed: 1,\n              },\n            }}\n            className={\"splide mb-7\"}\n          >\n            {data.items.map((item, index) => (\n              <SplideSlide className={\"max-w-2\"} key={item.images.url!}>\n                <img src={item.images.url!} alt={item.images.alt || \"\"} />\n              </SplideSlide>\n            ))}\n          </Splide>\n\n          <p className={\"body--3 whitespace-pre-line\"}>\n            {asText(data.primary.description)}\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n}\n", "import { gsap } from \"gsap\";\nimport {\n  HOMEPAGE_PROJECT_SUBTITLE_ID,\n  HOMEPAGE_PROJECT_TITLE_ID,\n} from \"~/slices/HomePage/HomePageProjectTitleContainer\";\nimport easings from \"~/lib/easings\";\nimport { Image } from \"~/components/Image\";\nimport { useLenis } from \"@studio-freight/react-lenis\";\nimport { asText } from \"@prismicio/richtext\";\nimport { useNavigate } from \"react-router\";\nimport { animateBanner } from \"~/components/ProjectHero/ProjectHero\";\nimport HomePageBackgroundContainer from \"~/slices/HomePage/HomePageProjectBackground\";\nimport type { MouseEvent } from \"react\";\nimport type { HomePageProjectsData } from \"~/slices/HomePage/HomePageProjects\";\nimport type { HomepageDocumentDataBodyHomepageProjectSlice } from \"types.generated\";\n\nconst HomePageProjectScrollItemContent = ({\n  project,\n}: {\n  project: HomepageDocumentDataBodyHomepageProjectSlice;\n}) => {\n  return (\n    <div className=\"HomePageProjectScrollItem__content desktop-only--grid grid-container pointer-events-none relative pb-[20vh] pt-[50vh]\">\n      <div className={\"col-span-4 md:col-start-9\"}>\n        {/*ANCHOR ONLY TO scrollTo on click*/}\n        <div id={`HomePageProjectScrollItem-${project.primary.slug}`} />\n        <p className={\"body--2 mb-5 max-w-[500px] text-white\"}>\n          {asText(project.primary.description)}\n        </p>\n        {project.items.map(({ slide }, index) => (\n          <div\n            key={`ProjectImage-${slide.url}-${index}`}\n            className={\"mb-5 overflow-hidden\"}\n          >\n            <Image\n              loading={\"eager\"}\n              field={slide}\n              className={\"w-full object-contain\"}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction HomePageProjectScrollContainer({\n  data,\n}: {\n  data: HomePageProjectsData;\n}) {\n  const lenis = useLenis();\n  const navigate = useNavigate();\n\n  const onClick = (\n    e: MouseEvent<HTMLDivElement>,\n    { index, slug = \"\" }: { index: number; slug: string }\n  ) => {\n    lenis.scrollTo(`#HomePageProjectScrollItem-${slug}`);\n\n    const duration = 1;\n    const ease = easings.mask;\n    const tl = gsap.timeline({\n      onComplete: () => {\n        navigate(`/work/${slug}`);\n      },\n    });\n\n    /* ANIMATE OTHER ITEMS */\n    const background = document\n      .querySelectorAll(\".hero-project-bg-container\")\n      [index].querySelector(\"img\");\n    tl.to(\n      background,\n      {\n        ease,\n        duration: duration - 0.3,\n        y: background ? background?.scrollHeight - window.innerHeight : 0,\n      },\n      0\n    );\n\n    const label = document.querySelector(\".HomePageProject__labels\");\n    tl.to(\n      label,\n      { ease, duration: duration - 0.5, y: \"100%\", autoAlpha: 0 },\n      0\n    );\n\n    const content = document.querySelectorAll(\n      \".HomePageProjectScrollItem__content\"\n    )[index];\n    tl.to(\n      content,\n      {\n        ease,\n        autoAlpha: 0,\n        duration: duration - 0.5,\n      },\n      0\n    );\n\n    if (e.target instanceof Element) {\n      const vars = { ease, duration, position: 0 };\n      // prettier-ignore\n      const titles = document.querySelectorAll(`.${HOMEPAGE_PROJECT_TITLE_ID}`);\n      const title = titles[index];\n      // prettier-ignore\n      const subtitles = document.querySelectorAll(`.${HOMEPAGE_PROJECT_SUBTITLE_ID}`);\n      const subtitle = subtitles[index];\n      const scope = document.querySelector(\"#home-projects-container\")!;\n      const itemsScope = document.querySelectorAll(\".HomePageBackground-Item\")[\n        index\n      ];\n\n      animateBanner(tl, vars, {\n        title,\n        subtitle,\n        scope,\n        itemsScope,\n      });\n    }\n  };\n\n  return (\n    <div id={\"home-projects-container\"}>\n      <HomePageBackgroundContainer data={data} />\n\n      {data.map((project, index) => (\n        <div\n          key={`HomePageProjectScrollItem-${index}`}\n          className={\"HomePageProjectScrollItem relative\"}\n          onClick={(e) => {\n            onClick(e, { index, slug: project.primary.slug as string });\n          }}\n        >\n          <HomePageProjectScrollItemContent project={project} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default HomePageProjectScrollContainer;\n", "import clsx from \"clsx\";\nimport { gsap } from \"gsap\";\nimport { useLayoutEffect } from \"~/hooks\";\nimport { asText } from \"@prismicio/richtext\";\nimport SplitText from \"gsap/dist/SplitText\";\nimport ScrollTrigger from \"gsap/dist/ScrollTrigger\";\nimport type { ReactNode } from \"react\";\nimport type { HomePageProjectsData } from \"~/slices/HomePage/HomePageProjects\";\n\nfunction splitText(nodes: NodeListOf<Element> | Array<Element>) {\n  return Array.from(nodes).map(\n    (item) =>\n      new SplitText(item, {\n        type: \"lines, words\",\n        linesClass: \"overflow-hidden\",\n      })\n  );\n}\n\nfunction animateTextOnScroll(\n  splits: SplitText,\n  trigger: Element,\n  isLast = false\n) {\n  const distance = 400;\n  const ease = \"slow.inOut\";\n  const element = splits.words;\n\n  const show = gsap.timeline({\n    scrollTrigger: {\n      trigger,\n      scrub: true,\n      start: `top ${distance}px`,\n      end: `+=${distance}px`,\n    },\n  });\n  show.to(element, { y: \"0%\", ease });\n\n  if (isLast) return;\n  const hide = gsap.timeline({\n    scrollTrigger: {\n      trigger,\n      scrub: true,\n      start: `bottom ${distance}px`,\n      end: `+=${distance}px`,\n    },\n  });\n  hide.to(element, { y: \"-100%\", ease });\n}\n\nfunction useAnimationOnScroll(selector: string) {\n  useLayoutEffect(() => {\n    const ctx = gsap.context(() => {\n      const scrollItems = document.querySelectorAll(\n        \".HomePageProjectScrollItem\"\n      );\n      const items = document.querySelectorAll(selector);\n      const splits = splitText(items);\n\n      splits.forEach((splits, index, arr) => {\n        if (index !== 0) gsap.set(splits.words, { y: \"100%\" });\n        animateTextOnScroll(\n          splits,\n          scrollItems[index],\n          index === arr.length - 1\n        );\n      });\n    });\n\n    return () => ctx.revert();\n  }, []);\n}\n\ninterface HomePageProjectTitleProps {\n  children: ReactNode;\n  className?: string;\n}\n\nconst HomePageProjectTitle = ({\n  children,\n  className,\n}: HomePageProjectTitleProps) => {\n  return (\n    <h3 className={clsx(className, \"heading--3 leading-none text-white\")}>\n      {children}\n    </h3>\n  );\n};\n\nexport const HOMEPAGE_PROJECT_TITLE_ID = \"HomePageProject-title\";\nexport const HOMEPAGE_PROJECT_SUBTITLE_ID = \"HomePageProject-subtitle\";\n\nfunction HomePageProjectTitleContainer({\n  data,\n}: {\n  data: HomePageProjectsData;\n}) {\n  useAnimationOnScroll(`.${HOMEPAGE_PROJECT_TITLE_ID}`);\n  useAnimationOnScroll(`.${HOMEPAGE_PROJECT_SUBTITLE_ID}`);\n  useAnimationOnScroll(\".HomePageProject-index\");\n\n  return (\n    <div\n      className={\n        \"HomePageProjectTitleContainer desktop-only absolute inset-0 h-screen w-full\"\n      }\n    >\n      <div className={\"absolute left-[30px] top-headerDesk\"}>\n        <div className={\"relative mb-1 h-[25px] w-[500px]\"}>\n          {data.map((project, index) => (\n            <div\n              key={`HomePageProject-title-${index}`}\n              className={\"absolute left-0 top-0\"}\n            >\n              <HomePageProjectTitle\n                className={`${HOMEPAGE_PROJECT_TITLE_ID} whitespace-nowrap`}\n              >\n                <span>{asText(project.primary.title)}</span>\n              </HomePageProjectTitle>\n            </div>\n          ))}\n        </div>\n\n        <div className={\"relative mb-[30px] h-[25px] w-[500px]\"}>\n          {data.map((project, index) => (\n            <div key={`subtitle-${index}`} className={\"absolute left-0 top-0\"}>\n              <HomePageProjectTitle\n                className={`${HOMEPAGE_PROJECT_SUBTITLE_ID}`}\n              >\n                <span>{asText(project.primary.capabilities)}</span>\n              </HomePageProjectTitle>\n            </div>\n          ))}\n        </div>\n\n        <div className={\"HomePageProject__labels\"}>\n          <HomePageProjectTitle className={\"mr-10 inline-block\"}>\n            CASE STUDY\n          </HomePageProjectTitle>\n          <div className={\"relative mr-1 inline-block h-[21px] w-[18px]\"}>\n            {data.map((item, index) => (\n              <div\n                key={`HomePageProject-index-${index}`}\n                className={\"absolute left-0 top-0\"}\n              >\n                <HomePageProjectTitle className={\"HomePageProject-index\"}>\n                  {index + 1}\n                </HomePageProjectTitle>\n              </div>\n            ))}\n          </div>\n          <HomePageProjectTitle className={\"inline-block\"}>\n            / {data.length}\n          </HomePageProjectTitle>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePageProjectTitleContainer;\n", "import { gsap } from \"gsap\";\nimport { Image } from \"~/components/Image\";\nimport { useLayoutEffect } from \"~/hooks\";\nimport ScrollTrigger from \"gsap/dist/ScrollTrigger\";\nimport ProjectHero, { setupBannerAnimation } from \"~/components/ProjectHero\";\nimport type { HomePageProjectsData } from \"~/slices/HomePage/HomePageProjects\";\nimport type { ProjectHeroTableProps } from \"~/components/ProjectHero/ProjectHeroTable\";\nimport { useRef } from \"react\";\nimport HomePageTitleContainer from \"~/slices/HomePage/HomePageProjectTitleContainer\";\n\nconst openPath = \"polygon(0% 100%, 100% 100%, 100% 0%, 0% 0%)\";\nconst closedPath = \"polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%)\";\n\nfunction HomePageBackgroundContainer({ data }: { data: HomePageProjectsData }) {\n  const container = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    const ctx = gsap.context((self) => {\n      // const easing = easings.mask;\n      const ease = \"linear\";\n\n      const pinBackgroundContainer = () => {\n        // Pin the background container for the whole scroll.\n        const bgContainer = document.querySelector(\n          \"#HomePageBackground-container\"\n        );\n        ScrollTrigger.create({\n          pin: true,\n          trigger: bgContainer,\n          end: () => {\n            const scrollContainer = document.querySelector(\n              \"#home-projects-container\"\n            )!;\n            return `+=${scrollContainer.scrollHeight - window.innerHeight}`;\n          },\n        });\n      };\n      const animateClippingMasks = () => {\n        const bgItems = document.querySelectorAll(\".hero-project-bg-container\");\n        const scrollItems = document.querySelectorAll(\n          \".HomePageProjectScrollItem\"\n        );\n\n        bgItems.forEach((bgItem, _index, arr) => {\n          const isFirst = _index === 0;\n          const isLast = _index === arr.length - 1;\n          const scrollItem = scrollItems[_index];\n\n          // Animate each bg clip path on scroll\n          gsap.set(bgItem, { clipPath: isFirst ? openPath : closedPath });\n          gsap.to(bgItem, {\n            ease,\n            clipPath: openPath,\n            scrollTrigger: {\n              trigger: scrollItem,\n              start: \"top 85%\",\n              end: \"+=100%\",\n              scrub: 0.3,\n            },\n          });\n\n          const image = bgItem.querySelector(\".hero-project-bg-container>img\");\n          gsap.set(image, { y: isFirst ? \"0%\" : \"10%\" });\n          gsap.to(image, {\n            ease,\n            y: \"0%\",\n            immediateRender: false,\n            scrollTrigger: {\n              trigger: scrollItem,\n              start: \"top 85%\",\n              end: \"+=100%\",\n              scrub: true,\n            },\n          });\n\n          if (!isLast) {\n            gsap.to(image, {\n              ease,\n              y: \"-10%\",\n              immediateRender: false,\n              scrollTrigger: {\n                trigger: scrollItem,\n                start: \"bottom 85%\",\n                end: \"+=100%\",\n                scrub: true,\n              },\n            });\n          }\n        });\n      };\n\n      // pinHeroes();\n      pinBackgroundContainer();\n      animateClippingMasks();\n    }, container);\n\n    return () => ctx.revert();\n  }, []);\n\n  return (\n    <>\n      <div\n        ref={container}\n        id={\"HomePageBackground-container\"}\n        className={\"absolute left-0 top-0 h-screen w-full overflow-hidden\"}\n      >\n        {data.map((project) => (\n          <div\n            key={`HomePageBackground-Item-${project.id}`}\n            className={\"HomePageBackground-Item absolute h-full w-full\"}\n          >\n            <div className=\"hero-project-bg-container absolute flex h-full w-full items-end\">\n              <Image\n                field={project.primary.background_image}\n                className={\"min-h-screen w-full object-cover\"}\n              />\n            </div>\n\n            {\"data\" in project.primary.project_data ? (\n              <ProjectHero\n                absolute={false}\n                isClone={true}\n                tableData={\n                  project.primary.project_data?.data as ProjectHeroTableProps\n                }\n              />\n            ) : null}\n          </div>\n        ))}\n        <HomePageTitleContainer data={data} />\n      </div>\n    </>\n  );\n}\n\nexport default HomePageBackgroundContainer;\n", "import React from \"react\";\nimport { asText } from \"@prismicio/richtext\";\nimport { HomePageProjectsData } from \"~/slices/HomePage/HomePageProjects\";\n\ninterface Props {\n  data: HomePageProjectsData;\n}\n\nfunction HomePageProjectsMobile({ data }: Props) {\n  return (\n    <section>\n      {/*MOBILE ONLY TITLES*/}\n      {data.map((project, index) => (\n        <div\n          key={`HomePageBackground-mobileItem-${project.id}`}\n          className=\"mobile-only--flex pt-headerHeightMobile absolute h-full flex-col pb-28\"\n        >\n          <div className=\"grid-container h-fit w-full pt-5\">\n            <div className=\"col-span-3\">\n              <h3 className={\"heading--3\"}>\n                {asText(project.primary.title)}\n                <br />\n                CASE STUDY\n              </h3>\n            </div>\n\n            <div className=\"col-span-1 col-start-4\">\n              <h3 className={\"heading--3 text-right\"}>\n                {`${index + 1} / ${data.length}`}\n              </h3>\n            </div>\n          </div>\n\n          <div className={\"flex grow items-center justify-center\"}>\n            <h3 className={\"heading--3 text-center\"}>\n              {`( ${asText(project.primary.cta)} )`}\n            </h3>\n          </div>\n\n          <div className=\"grid-container mobile-only--grid h-fit grow-0\">\n            <div className=\"col-span-4\">\n              <h3 className={\"heading--3 mb-12\"}>\n                {asText(project.primary.capabilities)}\n              </h3>\n              <p className={\"body--2\"}>{asText(project.primary.description)}</p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </section>\n  );\n}\n\nexport default HomePageProjectsMobile;\n", "import HomePageProjectScrollContainer from \"~/slices/HomePage/HomePageProjectScrollContainer\";\nimport HomePageProjectsMobile from \"~/slices/HomePage/HomePageProjectsMobile\";\nimport type { HomepageDocumentDataBodyHomepageProjectSlice } from \"types.generated\";\n\nexport type HomePageProjectsData =\n  HomepageDocumentDataBodyHomepageProjectSlice[];\n\ninterface HomePageProjectsProps {\n  data: HomePageProjectsData;\n}\n\nfunction HomePageProjects({ data }: HomePageProjectsProps) {\n  return (\n    <section className={\"relative\"}>\n      <HomePageProjectScrollContainer data={data} />\n      <HomePageProjectsMobile data={data} />\n    </section>\n  );\n}\n\nexport default HomePageProjects;\n", "import { asText } from \"@prismicio/richtext\";\nimport { PrismicRichText } from \"@prismicio/react\";\nimport HomePageTableColumn from \"./HomePageTableColumn\";\nimport type { HomepageDocumentDataBodyTableSlice } from \"types.generated\";\n\nfunction HomePageTable({ data }: { data: HomepageDocumentDataBodyTableSlice }) {\n  const descriptions = data.items.map((item) => item.description);\n\n  return (\n    <section className={!data.primary.mobile ? \"desktop-only\" : \"\"}>\n      {asText(data.primary.title) !== \"\" ? (\n        <div className=\"grid-container\">\n          <div\n            className={\n              \"col-span-4 mb-6 pb-0 pt-14 md:col-span-12 md:mb-0 md:border-b md:border-b-black/30 md:pb-5 md:pt-52\"\n            }\n          >\n            <h1 className={\"display--2\"}>{asText(data.primary.title)}</h1>\n          </div>\n        </div>\n      ) : null}\n\n      <div className=\"max-container\">\n        <div className=\"desktop-only--grid grid-container--full\">\n          {data.items.map((item, index) => {\n            return (\n              <div\n                key={`Title-${item.title}-${index}`}\n                className={\"col-span-4 md:col-span-3\"}\n              >\n                {asText(item.number) !== \"\" ? (\n                  <h2 className={\"heading--2 mb-10 pt-2 md:mb-44\"}>\n                    {asText(item.number)}\n                  </h2>\n                ) : null}\n                <h3 className={\"heading--2 mb-5\"}>{asText(item.title)}</h3>\n              </div>\n            );\n          })}\n        </div>\n\n        <div className=\"desktop-only--grid grid-container--full\">\n          {descriptions.map((description, index) => {\n            return (\n              <div\n                key={`Description-${index}`}\n                className={\"col-span-4 md:col-span-3\"}\n              >\n                <PrismicRichText\n                  field={description}\n                  components={{\n                    paragraph: ({ children }) => (\n                      <p className={\"body--3 mb-10 whitespace-pre-line\"}>\n                        {children}\n                      </p>\n                    ),\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n\n        <div\n          className={\n            \"grid-container--full overflow-hidden md:border-t md:border-t-black/30\"\n          }\n        >\n          {data.items.map((item, index) => {\n            return (\n              <HomePageTableColumn key={`TableHeader-${index}`} item={item} />\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default HomePageTable;\n", "import clsx from \"clsx\";\nimport { asText } from \"@prismicio/richtext\";\nimport { PrismicRichText } from \"@prismicio/react\";\nimport type { HomepageDocumentDataBodyTableSliceItem } from \"types.generated\";\n\nexport interface TableColumnProps {\n  item: HomepageDocumentDataBodyTableSliceItem;\n}\n\nfunction HomePageTableColumn({ item }: TableColumnProps) {\n  return (\n    <div\n      className={\n        \"group col-span-4 mb-24 border-t border-t-black/30 text-left md:col-span-3 md:mb-28 md:border-t-0\"\n      }\n    >\n      <div className={\"mobile-only pt-2.5\"}>\n        {item.number.length > 0 ? (\n          <h2 className={\"heading--2 mb-10 md:mb-44\"}>{asText(item.number)}</h2>\n        ) : null}\n        <h3 className={\"heading--2 mb-5\"}>{asText(item.title)}</h3>\n        <PrismicRichText\n          field={item.description}\n          components={{\n            paragraph: ({ children }) => (\n              <p className={\"body--3 mb-6 whitespace-pre-line\"}>{children}</p>\n            ),\n          }}\n        />\n      </div>\n\n      <div\n        className={\"relative col-span-4 border-t border-black/30 md:border-0\"}\n      >\n        {asText(item.rows)\n          .split(\", \")\n          .map((row, index) => {\n            return (\n              <div\n                key={`${row}-${index}`}\n                className={clsx(\n                  \"body--3 relative w-full border-b border-black/30 py-2.5 last:border-b-0 md:border-0\",\n                  \"md:group-first:after:absolute md:group-first:after:bottom-0 md:group-first:after:block md:group-first:after:h-[1px] md:group-first:after:w-[500%] md:group-first:after:bg-black/30\"\n                )}\n              >\n                {row}\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default HomePageTableColumn;\n", "import { gsap } from \"gsap\";\nimport clsx from \"clsx\";\nimport { useCallback, useRef } from \"react\";\nimport { ClearIcon } from \"~/svg\";\nimport { useLayoutEffect } from \"~/hooks\";\nimport { Image } from \"~/components/Image\";\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\n// @ts-ignore\nimport random from \"canvas-sketch-util/random\";\nimport type { MouseEvent } from \"react\";\nimport type { HomepageDocumentDataBodyHomeReviewsSlice } from \"types.generated\";\n\ninterface Props {\n  data: HomepageDocumentDataBodyHomeReviewsSlice;\n}\n\nfunction getRandomCoordinates(width: number, height: number) {\n  return [random.rangeFloor(width), random.rangeFloor(height)] as const;\n}\n\nfunction HomePageReviews({ data }: Props) {\n  const container = useRef<HTMLDivElement>(null);\n\n  const onClearClick = () => {\n    gsap.to(imagesRefs.current, {\n      opacity: 0,\n      scale: 0.95,\n      duration: 0.3,\n      ease: \"back.out\",\n      stagger: 0.05,\n    });\n  };\n\n  useLayoutEffect(() => {\n    const ctx = gsap.context((self) => {\n      if (!self.selector) return;\n\n      imagesRefs.current.forEach((img, index) => {\n        if (!imagesContainer.current) return;\n        const [x, y] = getRandomCoordinates(\n          imagesContainer.current.clientWidth - img.clientWidth,\n          imagesContainer.current.clientHeight - img.clientHeight\n        );\n        gsap.set(img, { x, y });\n      });\n    }, container);\n\n    return () => ctx.revert();\n  }, []);\n\n  const imagesContainer = useRef<HTMLDivElement>(null);\n  const imagesRefs = useRef<Array<HTMLDivElement>>([]);\n  const setImgRef = useCallback((node: HTMLDivElement | null) => {\n    if (node) imagesRefs.current = [...imagesRefs.current, node];\n  }, []);\n\n  const onMouseOverImage = (e: MouseEvent<HTMLDivElement>) => {\n    gsap.to(e.target, { opacity: 1, zIndex: 1, duration: 0.3 });\n\n    if (e.target instanceof Element)\n      gsap.to(e.target.querySelector(\"img\"), {\n        scale: 1,\n        duration: 0.4,\n        ease: \"back.out\",\n      });\n  };\n  const onMouseLeaveImage = (e: MouseEvent<HTMLDivElement>) => {\n    gsap.to(e.target, { zIndex: 0, duration: 0.3 });\n\n    if (e.target instanceof Element)\n      gsap.to(e.target.querySelector(\"img\"), {\n        scale: 0.95,\n        delay: 0.2,\n        duration: 0.2,\n        ease: \"back.out\",\n      });\n  };\n\n  return (\n    <section\n      ref={container}\n      className={\n        \"relative h-screen w-full select-none overflow-hidden bg-royal-blue\"\n      }\n    >\n      <div\n        className={clsx(\n          \"reviews-image-bg pointer-events-none absolute left-0 top-0 flex h-full w-full items-center\"\n        )}\n      >\n        <img\n          className={\"h-full w-full object-cover md:object-contain\"}\n          src={data.primary.background_image.url || \"\"}\n          alt={data.primary.background_image.alt || \"\"}\n        />\n      </div>\n\n      <div className={\"absolute left-0 top-0 items-center pl-1.5 pt-8 md:p-8\"}>\n        <h3 className={\"heading--3 mr-2 inline-block text-white\"}>\n          what the users are saying...\n        </h3>\n      </div>\n\n      <div className={\"mobile-only--flex h-full items-center\"}>\n        <Splide\n          options={{\n            perMove: 1,\n            padding: { left: \"8%\", right: \"8%\" },\n            arrows: false,\n            pagination: false,\n          }}\n        >\n          {data.items.map((item, index) => (\n            <SplideSlide key={`Review-Card-Img-Mobile-${index}`}>\n              <Image field={item.image} />\n            </SplideSlide>\n          ))}\n        </Splide>\n      </div>\n\n      <div className={\"desktop-only absolute h-full w-full p-20\"}>\n        <div ref={imagesContainer} className={\"relative h-full w-full\"}>\n          {data.items.map((field, index) => {\n            return (\n              <div\n                onMouseLeave={onMouseLeaveImage}\n                onMouseOver={onMouseOverImage}\n                ref={(node) => setImgRef(node)}\n                key={`HomePageReviews-${index}`}\n                className={\"absolute w-[35%] opacity-0\"}\n              >\n                <Image\n                  field={field.image}\n                  className={\"pointer-events-none object-contain\"}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <div\n        className={\n          \"desktop-only absolute bottom-0 right-0 cursor-pointer items-center p-8\"\n        }\n        onClick={onClearClick}\n      >\n        <h3 className={\"heading--3 mr-2 inline-block text-white\"}>( CLEAR )</h3>\n        <span className={\"inline-block\"}>\n          <ClearIcon />\n        </span>\n      </div>\n    </section>\n  );\n}\n\nexport default HomePageReviews;\n", "import React from \"react\";\nimport clsx from \"clsx\";\n\ninterface Props {\n  as?: string;\n  black?: boolean;\n  children: React.ReactNode;\n  className?: string;\n  textAlign?: \"text-left\" | \"text-center\" | \"text-right\";\n  verticalLeft?: boolean;\n  verticalRight?: boolean;\n}\n\nfunction TextBlur({\n  children,\n  textAlign,\n  className,\n  verticalLeft = false,\n  verticalRight = false,\n  black = false,\n}: Props) {\n  const wrapperClassNames = clsx(\n    \"text-blur display--2--vw relative\",\n    textAlign,\n    {\n      black,\n      verticalLeft,\n      verticalRight,\n    },\n    className\n  );\n\n  return <h1 className={wrapperClassNames}>{children}</h1>;\n}\n\nexport default TextBlur;\n", "import React from \"react\";\nimport TextBlur from \"~/components/TextBlur\";\n\nconst innerGrid = \"md:grid md:grid-cols-12 md:gap-x-[20px]\";\n\nfunction HomePageQuote() {\n  return (\n    <section\n      className={\n        \"texture-background overflow-hidden pb-16 pt-16 md:max-w-none md:pb-56 md:pt-64\"\n      }\n    >\n      <div className=\"max-container mx-auto max-w-[375px] md:max-w-none\">\n        <TextBlur className={\"mb-28 md:mb-56\"}>\n          <span className={innerGrid}>\n            <span className={\"md:col-span-12\"}>CANVAS IS AN </span>\n            <span className={\"md:col-span-10 md:col-start-3\"}>\n              INTERACTIVE <span className={\"desktop-only--inline\"}>DESIGN</span>\n            </span>\n            <span className={\"md:hidden\"}>DESIGN &</span>\n            <span className={\"md:col-span-10 md:col-start-3\"}>\n              DEVELOP<span className={\"mobile-only--inline\"}>-</span>\n              <br className={\"mobile-only--inline\"} />\n              <span>\n                MENT <br className={\"mobile-only--inline\"} />\n                <span className={\"block text-right md:inline-block\"}>\n                  STUDIO.\n                </span>\n              </span>\n            </span>\n          </span>\n          <br />\n        </TextBlur>\n\n        <TextBlur>\n          <span className={innerGrid}>\n            <span\n              className={\n                \"block text-right md:col-span-4 md:col-start-5 md:inline-block\"\n              }\n            >\n              WE CREATE\n            </span>\n            <span className={\"md:col-span-7\"}>\n              STRATEGY-\n              <br className={\"mobile-only\"} />\n              FOCUSED <br className={\"mobile-only\"} />\n            </span>\n            <br className={\"desktop-only\"} />\n            <span className={\"md:col-span-7\"}>\n              <span className={\"block text-right md:inline-block\"}>\n                & DESIGN-\n              </span>\n              <span className={\"block text-right md:inline-block\"}>DRIVEN</span>\n            </span>\n\n            <span className={\"md:col-span-8\"}>\n              DIGITAL <br className={\"mobile-only--inline\"} />\n              EXPERIENCES.\n            </span>\n          </span>\n        </TextBlur>\n      </div>\n    </section>\n  );\n}\n\nexport default HomePageQuote;\n", "import React from \"react\";\nimport TextBlur from \"~/components/TextBlur\";\nimport { LinkCTA, PrimaryCTALink } from \"~/components/CTA\";\nimport { INSTAGRAM_URL, LINKEDIN_URL, TWITTER_URL } from \"~/lib/constants\";\nimport clsx from \"clsx\";\n\nfunction Footer() {\n  return (\n    <footer\n      className={clsx(\n        \"transition-transform\",\n        \"noise-background relative overflow-hidden bg-black text-white\"\n      )}\n    >\n      <div className={\"grid-container mb-10 md:mb-56 md:pt-11\"}>\n        <div className=\"col-span-4 py-20 md:order-last md:col-start-9 md:py-0\">\n          <h1 className={\"heading--1 md:text-right\"}>\n            <PrimaryCTALink to={\"contact\"} dark size={\"lg\"} className={\"z-0\"}>\n              Let's Chat\n            </PrimaryCTALink>\n          </h1>\n        </div>\n        <div className=\"body--1 col-span-4 mr-10 md:col-span-6\">\n          If you are curious about some of our process or are interested in the\n          details, we document much of what we do in Notion. We leave some of it\n          public for those interested.\n        </div>\n      </div>\n\n      <div className={\"grid-container relative\"}>\n        <div className=\"col-span-2 flex flex-col justify-between border-l border-t border-white/20 pl-2.5 pt-3 md:h-[700px] md:pl-3\">\n          <div>\n            <h3 className={\"label--2 mb-24 md:mb-10\"}>DOCUMENTATION</h3>\n            <ul className={\"body--3\"}>\n              <li className={\"mb-5\"}>Development</li>\n              <li className={\"mb-5\"}>Design</li>\n              <li className={\"mb-5\"}>Process</li>\n            </ul>\n          </div>\n\n          <div className={\"desktop-only mb-5\"}>\n            <ul>\n              <li className={\"mb-4\"}>\n                <LinkCTA to={\"#\"} className={\"label--2\"}>\n                  PRIVACY POLICY\n                </LinkCTA>\n              </li>\n              <li className={\"mb-4\"}>\n                <LinkCTA to={\"#\"} className={\"label--2\"}>\n                  TERMS & CONDITIONS\n                </LinkCTA>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"col-span-2 flex flex-col justify-between border-l border-t border-white/20 pl-2.5 pt-3 md:h-[700px] md:pl-3\">\n          <div>\n            <h3 className={\"label--2 mb-24 md:mb-10\"}>SOCIAL</h3>\n\n            <ul className={\"body--3\"}>\n              <li className={\"mb-5\"}>\n                <LinkCTA target={\"_blank\"} to={INSTAGRAM_URL}>\n                  Instagram\n                </LinkCTA>\n              </li>\n              <li className={\"mb-5\"}>\n                <LinkCTA target={\"_blank\"} to={LINKEDIN_URL}>\n                  LinkedIn\n                </LinkCTA>\n              </li>\n              <li className={\"mb-5\"}>\n                <LinkCTA target={\"_blank\"} to={TWITTER_URL}>\n                  Twitter\n                </LinkCTA>\n              </li>\n            </ul>\n          </div>\n\n          <div className={\"label--2 desktop-only mb-5\"}>\n            <ul>\n              <li className={\"mb-4\"}>\u00A92023 Canvas LLC</li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"col-span-4 flex flex-col justify-between border-l border-t border-white/20 pb-20 pl-3 pt-3 md:col-span-2 md:h-[700px] md:pb-0\">\n          <div>\n            <h3 className={\"label--2 mb-5 md:mb-10\"}>CONTACTS</h3>\n            <ul className={\"body--3\"}>\n              <li className={\"mb-5\"}>info@canvascreative.co</li>\n              <li className={\"mb-5\"}>\n                <LinkCTA className={\"body--3\"} to={\"#\"}>\n                  Careers\n                </LinkCTA>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div\n        className={\n          \"grid-container pointer-events-none select-none md:absolute md:bottom-4 md:mb-24\"\n        }\n      >\n        <div className=\"col-span-4 border-l border-l-white/20 md:col-span-5 md:border-0\">\n          <TextBlur>PROPERLY </TextBlur>\n        </div>\n\n        <div className=\"col-span-4 border-l border-l-white/20 md:col-start-9 md:border-0\">\n          <TextBlur>BALANCED</TextBlur>\n        </div>\n\n        <div className=\"col-span-4 border-l border-l-white/20 md:col-span-5 md:col-start-6 md:border-0\">\n          <TextBlur>\n            FOR FEELING <span className={\"desktop-only--inline\"}>&</span>\n          </TextBlur>\n        </div>\n\n        <div className=\"col-span-4 border-l border-l-white/20 pb-20 md:col-span-5 md:col-start-8 md:border-0 md:pb-0\">\n          <TextBlur>\n            <span className={\"mobile-only--inline\"}>&</span> FUNCTION.\n          </TextBlur>\n        </div>\n      </div>\n      <div\n        className={\n          \"grid-container mobile-only--grid select-none md:absolute md:bottom-4 \"\n        }\n      >\n        <div className={\"col-span-2 border-l border-l-white/20 pl-2.5 md:pl-3\"}>\n          <ul>\n            <li className={\"label--2 mb-5\"}>privacy policy</li>\n            <li className={\"label--2 mb-5\"}>terms & Conditions</li>\n          </ul>\n        </div>\n\n        <div className={\"col-span-2 pl-2.5 md:pl-3\"}>\n          <ul className={\"label--2\"}>\n            <li className={\"mb-5\"}>\u00A92023 Canvas LLC</li>\n          </ul>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n", "export default {'entry':{'module':'/build/entry.client-WXRS5PHA.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-2FB3OOXZ.js','/build/_shared/chunk-JYYPEVM4.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-F3ZKR4VM.js','imports':['/build/_shared/chunk-6YR3AMMK.js','/build/_shared/chunk-KT64RBQR.js','/build/_shared/chunk-B7IYI5WI.js','/build/_shared/chunk-TYZV27UF.js','/build/_shared/chunk-XYKCWTHS.js','/build/_shared/chunk-64U3OWWI.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-FFWLSMTK.js','/build/_shared/chunk-L34RLERN.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-4XOT6OFC.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/contact':{'id':'routes/contact','parentId':'root','path':'contact','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contact-UWNKXMIQ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/styleguide':{'id':'routes/styleguide','parentId':'root','path':'styleguide','index':undefined,'caseSensitive':undefined,'module':'/build/routes/styleguide-BDZISS3F.js','imports':['/build/_shared/chunk-YIRGWWMB.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/work.$project':{'id':'routes/work.$project','parentId':'root','path':'work/:project','index':undefined,'caseSensitive':undefined,'module':'/build/routes/work.$project-I7XHWJEX.js','imports':['/build/_shared/chunk-YIRGWWMB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'187707ef','hmr':{'runtime':'/build/_shared/chunk-JYYPEVM4.js','timestamp':1693856138243},'url':'/build/manifest-187707EF.js'};", "\nimport * as entryServer from \"/Users/josemiguel/dev/canvas-studio/canvas-website/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/work.$project.tsx\";\nimport * as route2 from \"./routes/styleguide.tsx\";\nimport * as route3 from \"./routes/contact.tsx\";\nimport * as route4 from \"./routes/_index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_dev\":true,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/work.$project\": {\n      id: \"routes/work.$project\",\n      parentId: \"root\",\n      path: \"work/:project\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/styleguide\": {\n      id: \"routes/styleguide\",\n      parentId: \"root\",\n      path: \"styleguide\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/contact\": {\n      id: \"routes/contact\",\n      parentId: \"root\",\n      path: \"contact\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": ["cssBundleHref", "isbot", "import_react", "import_node", "createClient", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "clsx", "import_clsx", "import_react", "import_jsx_dev_runtime", "clsx", "import_gsap", "import_react", "import_clsx", "import_react", "import_jsx_dev_runtime", "clsx", "import_react", "import_gsap", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_clsx", "import_react", "import_jsx_dev_runtime", "clsx", "import_clsx", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "import_react", "import_clsx", "import_node", "import_jsx_dev_runtime", "response", "import_react", "import_clsx", "import_remix_validated_form", "import_clsx", "import_react", "import_remix_validated_form", "import_clsx", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "clsx", "import_clsx", "import_react", "import_remix_validated_form", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "validator", "clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_jsx_dev_runtime", "import_clsx", "import_gsap", "import_gsap", "CustomEase", "import_clsx", "import_gsap", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_usehooks_ts", "import_jsx_dev_runtime", "clsx", "Flip", "ProjectHero_default", "import_react_router", "import_react", "import_react", "import_jsx_dev_runtime", "clsx", "item", "ProjectHero_default", "import_jsx_dev_runtime", "Layout_default", "import_gsap", "import_Flip", "import_jsx_dev_runtime", "Flip", "ScrollTrigger", "ScrollSmoother", "SplitText", "createClient", "Layout_default", "loader", "import_clsx", "import_node", "import_react", "import_usehooks_ts", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "import_gsap", "import_react", "import_react_router", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_richtext", "import_react", "import_react", "import_jsx_dev_runtime", "import_richtext", "import_react", "import_jsx_dev_runtime", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "createClient", "clsx", "ProjectHero_default", "import_jsx_dev_runtime", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "import_clsx", "import_gsap", "import_react", "import_jsx_dev_runtime", "clsx", "import_richtext", "import_jsx_dev_runtime", "import_gsap", "import_clsx", "import_gsap", "import_richtext", "import_SplitText", "import_jsx_dev_runtime", "SplitText", "splits", "clsx", "import_react_lenis", "import_richtext", "import_react_router", "import_gsap", "import_ScrollTrigger", "import_react", "import_jsx_dev_runtime", "ScrollTrigger", "ProjectHero_default", "import_jsx_dev_runtime", "import_richtext", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_richtext", "import_react", "import_clsx", "import_richtext", "import_react", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "import_gsap", "import_clsx", "import_react", "import_react_splide", "import_jsx_dev_runtime", "random", "clsx", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "meta", "loader", "createClient"]
}
